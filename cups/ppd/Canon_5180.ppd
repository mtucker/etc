*PPD-Adobe: "4.3"*% Copyright 1993-2007 Electronics for Imaging, Inc.  All Rights Reserved.*% **********% EFI Information Block*%*%EFFileVersion: 2.0*%*% **********FormatVersion: "4.3"*LanguageEncoding: ISOLatin1*LanguageVersion: English*FileVersion: "2.0"*PSVersion: "(3017.102) 1"*PCFileName: "EF8U1976.PPD"*Product: "(Canon imagePASS-H1)"*ShortNickName: "Canon iR C5180-H1 PS Ver2.0"*NickName: "Canon iR C5180-H1 PS Ver2.0"*ModelName: "Canon iR C5180-H1 PS Ver2.0"*Manufacturer: "Canon"*% ========== EFI Specific Informational Keys ==========*%EFVersion 3.0: True*%EFDefaultFacePrinting: down*%EFMixedPageSizeSupport: True*%EFInlineMergeTray: None*%EFPpmBW: "51"*%EFIgnoreErrors: "1"*%EFIgnoreErr0: "Energy Saver Mode"*%EFPpmColor: "51"*%*LandscapeOrientation: Plus90*%EFISpecialOption *BookletMaker2: True*%EFISpecialOption *EF9999Copies: True*%EFISpecialOption *EFBidi: True*%EFISpecialOption *EFBidiAutoConfigure: True*%EFISpecialOption *EFBillingCode: True*%EFISpecialOption *EFBookletMaker3: True*%EFISpecialOption *EFClientJobID: True*%EFISpecialOption *EFForceJMDefaults: True*%EFISpecialOption *EFHideClrCstm: True*%EFISpecialOption *EFIAuthenticateWithLDAP: True*%EFISpecialOption *EFShowAdobePageSize: True*%EFISpecialOption *EFVDPRangesEnable: True*%EFISpecialOption *FieryDriver2: True*% ========== Driver Information ==========*%EFIPropPage EFPPFieryPrint/Fiery Printing:True*%EFIPropPage EFPPPostscript/PostScript:True*%EFIPropPage EFPPFonts/Fonts:True*%EFIPropPage EFPPInstallableOptions/Configuration:True | Prop*%EFIPropPage EFPPAbout/About:True*%EFIGroupName EFScrollPane/EFScrollPane:True*%EFIParent EFScrollPane/EFPPFieryPrint:True | Scrollpane*%EFIGroupName FPJobInfo/Job Info:True*%EFIParent FPJobInfo/EFScrollPane:True | Rolldown*%EFIGroupName FPPaperSource/Media:True*%EFIParent FPPaperSource/EFScrollPane:True | Rolldown*%EFIGroupName FPLayout/Layout:True*%EFIParent FPLayout/EFScrollPane:True | Rolldown*%EFIGroupName FPColorWise/Color:True*%EFIParent FPColorWise/EFScrollPane:True | Rolldown*%EFIGroupName FPImage/Image:True*%EFIParent FPImage/EFScrollPane:True | Rolldown*%EFIGroupName FPFinishing/Finishing:True*%EFIParent FPFinishing/EFScrollPane:True | Rolldown*%EFIGroupName FPVDP/VDP:True*%EFIParent FPVDP/EFScrollPane:True | Rolldown*%EFIGroupName FPStamping/Stamping:True*%EFIParent FPStamping/EFScrollPane:True | Rolldown*%EFIGroupName EFPPInstallableOptions/Configuration:True*%EFIParent EFPPInstallableOptions/EFScrollPane:True | Rolldown*%EFShortcut *EF_COPIES*%EFShortcut *EF_LAYOUT*%EFShortcut *EFDuplex*%EFShortcut *EFSort*%EFShortcut *InputSlot*%EFShortcut *EFStapler*%EFShortcut *EFNUpOption*% ========== Installable Options ==========*OpenGroup: InstallableOptions/Options Installed*%EFIFlags *EFFinisher Command|Rerip|Spooler*%EFIGroup *EFFinisher EFPPInstallableOptions/Configuration*OpenUI *EFFinisher/Sorter and Stapler:PickOne*OrderDependency: 0.0 AnySetup *EFFinisher*DefaultEFFinisher: False
*EFFinisher False/Not Installed: ""*EFFinisher Finisher/Finisher-X1: ""*EFFinisher Finisher2/Finisher-W1: ""*EFFinisher Finisher3/Saddle Finisher-W2: ""*?EFFinisher: " userdict /FieryXJdict known {FieryXJdict /getfierysysdict known{(EFFINISHER) FieryXJdict /getfierysysdict get exec }{ (False) }ifelse} { (False) } ifelse= flush "*End*CloseUI: *EFFinisher*%EFIFlags *EFPaperDeckOpt Command|Rerip|Spooler*%EFIGroup *EFPaperDeckOpt EFPPInstallableOptions/Configuration*OpenUI *EFPaperDeckOpt/Paper Source Option:PickOne*OrderDependency: 50.0 AnySetup *EFPaperDeckOpt*DefaultEFPaperDeckOpt: Option3
*EFPaperDeckOpt False/Not Installed: ""*EFPaperDeckOpt Option1/2-Cassette Feeding Unit: ""*EFPaperDeckOpt Option2/Side Paper Deck: ""*EFPaperDeckOpt Option3/2-Cassette Unit & Paper Deck: ""*?EFPaperDeckOpt: " userdict /FieryXJdict known {FieryXJdict /getfierysysdict known{(EFPAPERDECKOPT) FieryXJdict /getfierysysdict get exec }{ (False) }ifelse} { (False) } ifelse= flush "*End*CloseUI: *EFPaperDeckOpt*%EFIFlags *EFPunchOpt Command|Rerip|Spooler*%EFIGroup *EFPunchOpt EFPPInstallableOptions/Configuration*OpenUI *EFPunchOpt/Punch Unit:PickOne*OrderDependency: 0.0 AnySetup *EFPunchOpt*DefaultEFPunchOpt: False
*EFPunchOpt False/Not Installed: ""*EFPunchOpt True/Punch Unit: ""*?EFPunchOpt:  " userdict /FieryXJdict known {FieryXJdict /getfierysysdict known{(EFPUNCHOPT) FieryXJdict /getfierysysdict get exec }{ (False) }ifelse} { (False) } ifelse= flush "*End*CloseUI: *EFPunchOpt*CloseGroup: InstallableOptions*% ========== UIConstraints ==========*UIConstraints: *EFBkCoverTray Tray3 *EFPaperDeckOpt False*UIConstraints: *EFPaperDeckOpt False *EFBkCoverTray Tray3*UIConstraints: *EFBkCoverTray Tray3 *EFPaperDeckOpt Option2*UIConstraints: *EFPaperDeckOpt Option2 *EFBkCoverTray Tray3*UIConstraints: *EFBkCoverTray Tray4 *EFPaperDeckOpt False*UIConstraints: *EFPaperDeckOpt False *EFBkCoverTray Tray4*UIConstraints: *EFBkCoverTray Tray4 *EFPaperDeckOpt Option2*UIConstraints: *EFPaperDeckOpt Option2 *EFBkCoverTray Tray4*UIConstraints: *EFBkCoverTray Tray5 *EFPaperDeckOpt False*UIConstraints: *EFPaperDeckOpt False *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPaperDeckOpt Option1*UIConstraints: *EFPaperDeckOpt Option1 *EFBkCoverTray Tray5*UIConstraints: *EFCoverTray Tray3 *EFPaperDeckOpt False*UIConstraints: *EFPaperDeckOpt False *EFCoverTray Tray3*UIConstraints: *EFCoverTray Tray3 *EFPaperDeckOpt Option2*UIConstraints: *EFPaperDeckOpt Option2 *EFCoverTray Tray3*UIConstraints: *EFCoverTray Tray4 *EFPaperDeckOpt False*UIConstraints: *EFPaperDeckOpt False *EFCoverTray Tray4*UIConstraints: *EFCoverTray Tray4 *EFPaperDeckOpt Option2*UIConstraints: *EFPaperDeckOpt Option2 *EFCoverTray Tray4*UIConstraints: *EFCoverTray Tray5 *EFPaperDeckOpt False*UIConstraints: *EFPaperDeckOpt False *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPaperDeckOpt Option1*UIConstraints: *EFPaperDeckOpt Option1 *EFCoverTray Tray5*UIConstraints: *EFFinisher False *EFOutputBin Outbin12*UIConstraints: *EFOutputBin Outbin12 *EFFinisher False*UIConstraints: *EFFinisher False *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFFinisher False*UIConstraints: *EFFinisher False *EFOutputBin Outbin7*UIConstraints: *EFOutputBin Outbin7 *EFFinisher False*UIConstraints: *EFFinisher False *EFOutputBin Outbin8*UIConstraints: *EFOutputBin Outbin8 *EFFinisher False*UIConstraints: *EFFinisher Finisher2 *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFFinisher Finisher2*UIConstraints: *EFFinisher Finisher2 *EFOutputBin Outbin5*UIConstraints: *EFOutputBin Outbin5 *EFFinisher Finisher2*UIConstraints: *EFFinisher Finisher2 *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFFinisher Finisher2*UIConstraints: *EFFinisher Finisher2 *EFOutputBin Outbin8*UIConstraints: *EFOutputBin Outbin8 *EFFinisher Finisher2*UIConstraints: *EFFinisher Finisher3 *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFFinisher Finisher3*UIConstraints: *EFFinisher Finisher3 *EFOutputBin Outbin5*UIConstraints: *EFOutputBin Outbin5 *EFFinisher Finisher3*UIConstraints: *EFFinisher Finisher3 *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFFinisher Finisher3*UIConstraints: *EFFinisher Finisher3 *EFOutputBin Outbin8*UIConstraints: *EFOutputBin Outbin8 *EFFinisher Finisher3*UIConstraints: *EFFinisher Finisher *EFOutputBin Outbin10*UIConstraints: *EFOutputBin Outbin10 *EFFinisher Finisher*UIConstraints: *EFFinisher Finisher *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFFinisher Finisher*UIConstraints: *EFFinisher Finisher *EFOutputBin Outbin12*UIConstraints: *EFOutputBin Outbin12 *EFFinisher Finisher*UIConstraints: *EFFinisher Finisher *EFOutputBin Outbin5*UIConstraints: *EFOutputBin Outbin5 *EFFinisher Finisher*UIConstraints: *EFFinisher Finisher *EFOutputBin Outbin7*UIConstraints: *EFOutputBin Outbin7 *EFFinisher Finisher*UIConstraints: *EFFinisher False *EFPunchEdge*UIConstraints: *EFPunchEdge *EFFinisher False*UIConstraints: *EFFinisher False *EFPunchOpt True*UIConstraints: *EFPunchOpt True *EFFinisher False*UIConstraints: *EFFinisher Finisher *EFPunchOpt True*UIConstraints: *EFPunchOpt True *EFFinisher Finisher*UIConstraints: *EFFinisher False *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFFinisher False*UIConstraints: *EFFinisher False *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFFinisher False*UIConstraints: *EFFinisher Finisher2 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFFinisher Finisher2*UIConstraints: *EFFinisher Finisher2 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFFinisher Finisher2*UIConstraints: *EFFinisher Finisher3 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFFinisher Finisher3*UIConstraints: *EFFinisher Finisher3 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFFinisher Finisher3*UIConstraints: *EFFinisher Finisher *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFFinisher Finisher*UIConstraints: *EFFinisher Finisher *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFFinisher Finisher*UIConstraints: *EFFinisher False *EFStapler*UIConstraints: *EFStapler *EFFinisher False*UIConstraints: *EFFinisher Finisher2 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFFinisher Finisher2*UIConstraints: *EFFinisher Finisher *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFFinisher Finisher*UIConstraints: *EFFinisher Finisher *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFFinisher Finisher*UIConstraints: *EFFinisher Finisher *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFFinisher Finisher*UIConstraints: *EFFinisher Finisher *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFFinisher Finisher*UIConstraints: *EFPaperDeckOpt False *InputSlot Tray3*UIConstraints: *InputSlot Tray3 *EFPaperDeckOpt False*UIConstraints: *EFPaperDeckOpt False *InputSlot Tray4*UIConstraints: *InputSlot Tray4 *EFPaperDeckOpt False*UIConstraints: *EFPaperDeckOpt False *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPaperDeckOpt False*UIConstraints: *EFPaperDeckOpt Option1 *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPaperDeckOpt Option1*UIConstraints: *EFPaperDeckOpt Option2 *InputSlot Tray3*UIConstraints: *InputSlot Tray3 *EFPaperDeckOpt Option2*UIConstraints: *EFPaperDeckOpt Option2 *InputSlot Tray4*UIConstraints: *InputSlot Tray4 *EFPaperDeckOpt Option2*UIConstraints: *EFPunchEdge *EFPunchOpt False*UIConstraints: *EFPunchOpt False *EFPunchEdge*UIConstraints: *EFAutoScaling True *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFAutoScaling True*UIConstraints: *EFBkCoverTray Tray1 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFBkCoverTray Tray1*UIConstraints: *EFBkCoverTray Tray1 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFBkCoverTray Tray1*UIConstraints: *EFBkCoverTray Tray1 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFBkCoverTray Tray1*UIConstraints: *EFBkCoverTray Tray2 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFBkCoverTray Tray2*UIConstraints: *EFBkCoverTray Tray2 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFBkCoverTray Tray2*UIConstraints: *EFBkCoverTray Tray2 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFBkCoverTray Tray2*UIConstraints: *EFBkCoverTray Tray3 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFBkCoverTray Tray3*UIConstraints: *EFBkCoverTray Tray3 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFBkCoverTray Tray3*UIConstraints: *EFBkCoverTray Tray3 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFBkCoverTray Tray3*UIConstraints: *EFBkCoverTray Tray4 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFBkCoverTray Tray4*UIConstraints: *EFBkCoverTray Tray4 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFBkCoverTray Tray4*UIConstraints: *EFBkCoverTray Tray4 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFBkCoverTray Tray4*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize A3*UIConstraints: *EFPrintSize A3 *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize B4*UIConstraints: *EFPrintSize B4 *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize Executive*UIConstraints: *EFPrintSize Executive *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize Legal*UIConstraints: *EFPrintSize Legal *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize Tabloid*UIConstraints: *EFPrintSize Tabloid *EFBkCoverTray Tray5*UIConstraints: *EFBkCoverTray Tray5 *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFBkCoverTray Tray5*UIConstraints: *EFBkCover *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFBkCover*UIConstraints: *EFBkCover Blank *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFBkCover Blank*UIConstraints: *EFBkCover Both *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFBkCover Both*UIConstraints: *EFBkCover Side1 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFBkCover Side1*UIConstraints: *EFBkCover Side2 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFBkCover Side2*UIConstraints: *EFBlkOvpCtrl TEXTGRAPHICS *EFPureBlack BLACKNORMAL*UIConstraints: *EFPureBlack BLACKNORMAL *EFBlkOvpCtrl TEXTGRAPHICS*UIConstraints: *EFBlkOvpCtrl TEXTGRAPHICS *EFPureBlack BLACKRICHON*UIConstraints: *EFPureBlack BLACKRICHON *EFBlkOvpCtrl TEXTGRAPHICS*UIConstraints: *EFBlkOvpCtrl TEXTONLY *EFPureBlack BLACKNORMAL*UIConstraints: *EFPureBlack BLACKNORMAL *EFBlkOvpCtrl TEXTONLY*UIConstraints: *EFBlkOvpCtrl TEXTONLY *EFPureBlack BLACKRICHON*UIConstraints: *EFPureBlack BLACKRICHON *EFBlkOvpCtrl TEXTONLY*UIConstraints: *EFBlkOvpCtrl TEXTGRAPHICS *EFSeparations True*UIConstraints: *EFSeparations True *EFBlkOvpCtrl TEXTGRAPHICS*UIConstraints: *EFBlkOvpCtrl TEXTONLY *EFSeparations True*UIConstraints: *EFSeparations True *EFBlkOvpCtrl TEXTONLY*UIConstraints: *EFColorMode Grayscale *EFCompOverprint True*UIConstraints: *EFCompOverprint True *EFColorMode Grayscale*UIConstraints: *EFColorMode Grayscale *EFSeparations True*UIConstraints: *EFSeparations True *EFColorMode Grayscale*UIConstraints: *EFCompOverprint True *EFSeparations True*UIConstraints: *EFSeparations True *EFCompOverprint True*UIConstraints: *EFCopyNumMode Auto *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFCopyNumMode Auto*UIConstraints: *EFCopyNumMode Auto *EFSort Group*UIConstraints: *EFSort Group *EFCopyNumMode Auto*UIConstraints: *EFCopyNumMode Auto *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFCopyNumMode Auto*UIConstraints: *EFCopyNumMode Auto *EFTrustMark Type1*UIConstraints: *EFTrustMark Type1 *EFCopyNumMode Auto*UIConstraints: *EFCoverTray Tray1 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFCoverTray Tray1*UIConstraints: *EFCoverTray Tray1 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFCoverTray Tray1*UIConstraints: *EFCoverTray Tray1 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFCoverTray Tray1*UIConstraints: *EFCoverTray Tray2 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFCoverTray Tray2*UIConstraints: *EFCoverTray Tray2 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFCoverTray Tray2*UIConstraints: *EFCoverTray Tray2 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFCoverTray Tray2*UIConstraints: *EFCoverTray Tray3 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFCoverTray Tray3*UIConstraints: *EFCoverTray Tray3 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFCoverTray Tray3*UIConstraints: *EFCoverTray Tray3 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFCoverTray Tray3*UIConstraints: *EFCoverTray Tray4 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFCoverTray Tray4*UIConstraints: *EFCoverTray Tray4 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFCoverTray Tray4*UIConstraints: *EFCoverTray Tray4 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFCoverTray Tray4*UIConstraints: *EFCoverTray Tray5 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize A3*UIConstraints: *EFPrintSize A3 *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize B4*UIConstraints: *EFPrintSize B4 *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize Executive*UIConstraints: *EFPrintSize Executive *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize Legal*UIConstraints: *EFPrintSize Legal *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize Tabloid*UIConstraints: *EFPrintSize Tabloid *EFCoverTray Tray5*UIConstraints: *EFCoverTray Tray5 *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFCoverTray Tray5*UIConstraints: *EFCover *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFCover*UIConstraints: *EFCreateMaster *EFMMInUse*UIConstraints: *EFMMInUse *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 16ULH*UIConstraints: *EFNUpOption 16ULH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 16ULV*UIConstraints: *EFNUpOption 16ULV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 16URH*UIConstraints: *EFNUpOption 16URH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 16URV*UIConstraints: *EFNUpOption 16URV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 2ULH*UIConstraints: *EFNUpOption 2ULH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 2ULV*UIConstraints: *EFNUpOption 2ULV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 2URH*UIConstraints: *EFNUpOption 2URH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 2URV*UIConstraints: *EFNUpOption 2URV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 4ULH*UIConstraints: *EFNUpOption 4ULH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 4ULV*UIConstraints: *EFNUpOption 4ULV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 4URH*UIConstraints: *EFNUpOption 4URH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 4URV*UIConstraints: *EFNUpOption 4URV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 6ULH*UIConstraints: *EFNUpOption 6ULH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 6ULV*UIConstraints: *EFNUpOption 6ULV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 6URH*UIConstraints: *EFNUpOption 6URH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 6URV*UIConstraints: *EFNUpOption 6URV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 9ULH*UIConstraints: *EFNUpOption 9ULH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 9ULV*UIConstraints: *EFNUpOption 9ULV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 9URH*UIConstraints: *EFNUpOption 9URH *EFCreateMaster*UIConstraints: *EFCreateMaster *EFNUpOption 9URV*UIConstraints: *EFNUpOption 9URV *EFCreateMaster*UIConstraints: *EFCreateMaster *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFCreateMaster*UIConstraints: *EFCreateMaster *EFResolution 1200x1200dpi*UIConstraints: *EFResolution 1200x1200dpi *EFCreateMaster*UIConstraints: *EFCreateMaster *EFSeparations True*UIConstraints: *EFSeparations True *EFCreateMaster*UIConstraints: *EFCreateMaster *EFUseMaster*UIConstraints: *EFUseMaster *EFCreateMaster*UIConstraints: *EFDestination FormStore *EFMMInUse True*UIConstraints: *EFMMInUse True *EFDestination FormStore*UIConstraints: *EFDestination FormStore *EFResolution 1200x1200dpi*UIConstraints: *EFResolution 1200x1200dpi *EFDestination FormStore*UIConstraints: *EFDuplex LongEdge *EFMediaInterlv Blank*UIConstraints: *EFMediaInterlv Blank *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFMediaInterlv Printed*UIConstraints: *EFMediaInterlv Printed *EFDuplex LongEdge*UIConstraints: *EFDuplex ShortEdge *EFMediaInterlv Blank*UIConstraints: *EFMediaInterlv Blank *EFDuplex ShortEdge*UIConstraints: *EFDuplex ShortEdge *EFMediaInterlv Printed*UIConstraints: *EFMediaInterlv Printed *EFDuplex ShortEdge*UIConstraints: *EFDuplex *EFMediaInterlv*UIConstraints: *EFMediaInterlv *EFDuplex*UIConstraints: *EFDuplex LongEdge *EFMediaType Envelope*UIConstraints: *EFMediaType Envelope *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFMediaType Extraheavy*UIConstraints: *EFMediaType Extraheavy *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFMediaType Glossy*UIConstraints: *EFMediaType Glossy *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFMediaType Labels*UIConstraints: *EFMediaType Labels *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFMediaType Tabstock*UIConstraints: *EFMediaType Tabstock *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFMediaType Translucent*UIConstraints: *EFMediaType Translucent *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFMediaType Transparency*UIConstraints: *EFMediaType Transparency *EFDuplex LongEdge*UIConstraints: *EFDuplex ShortEdge *EFMediaType Envelope*UIConstraints: *EFMediaType Envelope *EFDuplex ShortEdge*UIConstraints: *EFDuplex ShortEdge *EFMediaType Extraheavy*UIConstraints: *EFMediaType Extraheavy *EFDuplex ShortEdge*UIConstraints: *EFDuplex ShortEdge *EFMediaType Glossy*UIConstraints: *EFMediaType Glossy *EFDuplex ShortEdge*UIConstraints: *EFDuplex ShortEdge *EFMediaType Labels*UIConstraints: *EFMediaType Labels *EFDuplex ShortEdge*UIConstraints: *EFDuplex ShortEdge *EFMediaType Tabstock*UIConstraints: *EFMediaType Tabstock *EFDuplex ShortEdge*UIConstraints: *EFDuplex ShortEdge *EFMediaType Translucent*UIConstraints: *EFMediaType Translucent *EFDuplex ShortEdge*UIConstraints: *EFDuplex ShortEdge *EFMediaType Transparency*UIConstraints: *EFMediaType Transparency *EFDuplex ShortEdge*UIConstraints: *EFDuplex *EFMediaType Envelope*UIConstraints: *EFMediaType Envelope *EFDuplex*UIConstraints: *EFDuplex *EFMediaType Labels*UIConstraints: *EFMediaType Labels *EFDuplex*UIConstraints: *EFDuplex *EFMediaType Translucent*UIConstraints: *EFMediaType Translucent *EFDuplex*UIConstraints: *EFDuplex *EFMediaType Transparency*UIConstraints: *EFMediaType Transparency *EFDuplex*UIConstraints: *EFDuplex False *EFRIPBooklet NestSaddleL*UIConstraints: *EFRIPBooklet NestSaddleL *EFDuplex False*UIConstraints: *EFDuplex False *EFRIPBooklet NestSaddleR*UIConstraints: *EFRIPBooklet NestSaddleR *EFDuplex False*UIConstraints: *EFDuplex False *EFRIPBooklet NestSaddleT*UIConstraints: *EFRIPBooklet NestSaddleT *EFDuplex False*UIConstraints: *EFDuplex False *EFRIPBooklet TwoUp*UIConstraints: *EFRIPBooklet TwoUp *EFDuplex False*UIConstraints: *EFDuplex False *EFRIPBooklet TwoUpRight*UIConstraints: *EFRIPBooklet TwoUpRight *EFDuplex False*UIConstraints: *EFDuplex False *EFRIPBooklet TwoUpTop*UIConstraints: *EFRIPBooklet TwoUpTop *EFDuplex False*UIConstraints: *EFDuplex LongEdge *EFRIPBooklet NestSaddleL*UIConstraints: *EFRIPBooklet NestSaddleL *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFRIPBooklet NestSaddleR*UIConstraints: *EFRIPBooklet NestSaddleR *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFRIPBooklet TwoUp*UIConstraints: *EFRIPBooklet TwoUp *EFDuplex LongEdge*UIConstraints: *EFDuplex LongEdge *EFRIPBooklet TwoUpRight*UIConstraints: *EFRIPBooklet TwoUpRight *EFDuplex LongEdge*UIConstraints: *EFDuplex ShortEdge *EFRIPBooklet NestSaddleT*UIConstraints: *EFRIPBooklet NestSaddleT *EFDuplex ShortEdge*UIConstraints: *EFDuplex ShortEdge *EFRIPBooklet TwoUpTop*UIConstraints: *EFRIPBooklet TwoUpTop *EFDuplex ShortEdge*UIConstraints: *EFMMInUse True *EFNUpOption 16ULH*UIConstraints: *EFNUpOption 16ULH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 16ULV*UIConstraints: *EFNUpOption 16ULV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 16URH*UIConstraints: *EFNUpOption 16URH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 16URV*UIConstraints: *EFNUpOption 16URV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 2ULH*UIConstraints: *EFNUpOption 2ULH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 2ULV*UIConstraints: *EFNUpOption 2ULV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 2URH*UIConstraints: *EFNUpOption 2URH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 2URV*UIConstraints: *EFNUpOption 2URV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 4ULH*UIConstraints: *EFNUpOption 4ULH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 4ULV*UIConstraints: *EFNUpOption 4ULV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 4URH*UIConstraints: *EFNUpOption 4URH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 4URV*UIConstraints: *EFNUpOption 4URV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 6ULH*UIConstraints: *EFNUpOption 6ULH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 6ULV*UIConstraints: *EFNUpOption 6ULV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 6URH*UIConstraints: *EFNUpOption 6URH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 6URV*UIConstraints: *EFNUpOption 6URV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 9ULH*UIConstraints: *EFNUpOption 9ULH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 9ULV*UIConstraints: *EFNUpOption 9ULV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 9URH*UIConstraints: *EFNUpOption 9URH *EFMMInUse True*UIConstraints: *EFMMInUse True *EFNUpOption 9URV*UIConstraints: *EFNUpOption 9URV *EFMMInUse True*UIConstraints: *EFMMInUse True *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFMMInUse True*UIConstraints: *EFMediaInterlv Blank *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaInterlv Blank*UIConstraints: *EFMediaInterlv Blank *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaInterlv Blank*UIConstraints: *EFMediaInterlv Printed *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaInterlv Printed*UIConstraints: *EFMediaInterlv Printed *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaInterlv Printed*UIConstraints: *EFMediaType Envelope *EFOutputBin Outbin10*UIConstraints: *EFOutputBin Outbin10 *EFMediaType Envelope*UIConstraints: *EFMediaType Envelope *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFMediaType Envelope*UIConstraints: *EFMediaType Envelope *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFMediaType Envelope*UIConstraints: *EFMediaType Envelope *EFOutputBin Outbin7*UIConstraints: *EFOutputBin Outbin7 *EFMediaType Envelope*UIConstraints: *EFMediaType Glossy *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFMediaType Glossy*UIConstraints: *EFMediaType Labels *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFMediaType Labels*UIConstraints: *EFMediaType Tabstock *EFOutputBin Outbin10*UIConstraints: *EFOutputBin Outbin10 *EFMediaType Tabstock*UIConstraints: *EFMediaType Tabstock *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFMediaType Tabstock*UIConstraints: *EFMediaType Tabstock *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFMediaType Tabstock*UIConstraints: *EFMediaType Tabstock *EFOutputBin Outbin7*UIConstraints: *EFOutputBin Outbin7 *EFMediaType Tabstock*UIConstraints: *EFMediaType Translucent *EFOutputBin Outbin10*UIConstraints: *EFOutputBin Outbin10 *EFMediaType Translucent*UIConstraints: *EFMediaType Translucent *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFMediaType Translucent*UIConstraints: *EFMediaType Translucent *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFMediaType Translucent*UIConstraints: *EFMediaType Translucent *EFOutputBin Outbin7*UIConstraints: *EFOutputBin Outbin7 *EFMediaType Translucent*UIConstraints: *EFMediaType Transparency *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFMediaType Transparency*UIConstraints: *EFMediaType Envelope *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFMediaType Envelope*UIConstraints: *EFMediaType Envelope *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaType Envelope*UIConstraints: *EFMediaType Envelope *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaType Envelope*UIConstraints: *EFMediaType Envelope *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFMediaType Envelope*UIConstraints: *EFMediaType Extraheavy *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaType Extraheavy*UIConstraints: *EFMediaType Extraheavy *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaType Extraheavy*UIConstraints: *EFMediaType Glossy *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaType Glossy*UIConstraints: *EFMediaType Glossy *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaType Glossy*UIConstraints: *EFMediaType Labels *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFMediaType Labels*UIConstraints: *EFMediaType Labels *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaType Labels*UIConstraints: *EFMediaType Labels *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaType Labels*UIConstraints: *EFMediaType Labels *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFMediaType Labels*UIConstraints: *EFMediaType Letterhead *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaType Letterhead*UIConstraints: *EFMediaType Letterhead *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaType Letterhead*UIConstraints: *EFMediaType Prepunched *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaType Prepunched*UIConstraints: *EFMediaType Prepunched *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaType Prepunched*UIConstraints: *EFMediaType Tabstock *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFMediaType Tabstock*UIConstraints: *EFMediaType Tabstock *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaType Tabstock*UIConstraints: *EFMediaType Tabstock *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaType Tabstock*UIConstraints: *EFMediaType Tabstock *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFMediaType Tabstock*UIConstraints: *EFMediaType Translucent *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFMediaType Translucent*UIConstraints: *EFMediaType Translucent *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaType Translucent*UIConstraints: *EFMediaType Translucent *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaType Translucent*UIConstraints: *EFMediaType Translucent *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFMediaType Translucent*UIConstraints: *EFMediaType Transparency *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFMediaType Transparency*UIConstraints: *EFMediaType Transparency *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFMediaType Transparency*UIConstraints: *EFMediaType Transparency *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFMediaType Transparency*UIConstraints: *EFMediaType Transparency *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFMediaType Transparency*UIConstraints: *EFNUpBoundingBox True *EFNUpOption 1UP*UIConstraints: *EFNUpOption 1UP *EFNUpBoundingBox True*UIConstraints: *EFNUpOption 16ULH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 16ULH*UIConstraints: *EFNUpOption 16ULV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 16ULV*UIConstraints: *EFNUpOption 16URH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 16URH*UIConstraints: *EFNUpOption 16URV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 16URV*UIConstraints: *EFNUpOption 2ULH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 2ULH*UIConstraints: *EFNUpOption 2ULV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 2ULV*UIConstraints: *EFNUpOption 2URH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 2URH*UIConstraints: *EFNUpOption 2URV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 2URV*UIConstraints: *EFNUpOption 4ULH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 4ULH*UIConstraints: *EFNUpOption 4ULV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 4ULV*UIConstraints: *EFNUpOption 4URH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 4URH*UIConstraints: *EFNUpOption 4URV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 4URV*UIConstraints: *EFNUpOption 6ULH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 6ULH*UIConstraints: *EFNUpOption 6ULV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 6ULV*UIConstraints: *EFNUpOption 6URH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 6URH*UIConstraints: *EFNUpOption 6URV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 6URV*UIConstraints: *EFNUpOption 9ULH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 9ULH*UIConstraints: *EFNUpOption 9ULV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 9ULV*UIConstraints: *EFNUpOption 9URH *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 9URH*UIConstraints: *EFNUpOption 9URV *EFUseMaster*UIConstraints: *EFUseMaster *EFNUpOption 9URV*UIConstraints: *EFOutProfile OUT7 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFOutProfile OUT7*UIConstraints: *EFOutProfile OUT7 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFOutProfile OUT7*UIConstraints: *EFOutputBin Outbin11 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFPrintSize Env10*UIConstraints: *EFPrintSize Env10 *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvC5 *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize EnvMonarch *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFPrintSize ISOB5*UIConstraints: *EFPrintSize ISOB5 *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin6 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin6 *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFOutputBin Outbin6*UIConstraints: *EFOutputBin Outbin11 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin11 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFOutputBin Outbin11*UIConstraints: *EFOutputBin Outbin12 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFOutputBin Outbin12*UIConstraints: *EFOutputBin Outbin12 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFOutputBin Outbin12*UIConstraints: *EFOutputBin Outbin5 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFOutputBin Outbin5*UIConstraints: *EFOutputBin Outbin5 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFOutputBin Outbin5*UIConstraints: *EFOutputBin Outbin8 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFOutputBin Outbin8*UIConstraints: *EFOutputBin Outbin8 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFOutputBin Outbin8*UIConstraints: *EFOutputOrder Reverse *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFOutputOrder Reverse*UIConstraints: *EFPPTSlide True *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPPTSlide True*UIConstraints: *EFPPTSlide True *EFSeparations True*UIConstraints: *EFSeparations True *EFPPTSlide True*UIConstraints: *EFPrintMaster True *EFSeparations True*UIConstraints: *EFSeparations True *EFPrintMaster True*UIConstraints: *EFPrintSize 9x11 *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPrintSize 9x11*UIConstraints: *EFPrintSize A4Tab *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPrintSize A4Tab*UIConstraints: *EFPrintSize Env10 *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPrintSize Env10*UIConstraints: *EFPrintSize EnvC5 *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvMonarch *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize ISOB5 *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPrintSize ISOB5*UIConstraints: *EFPrintSize SRA3 *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPrintSize SRA3*UIConstraints: *EFPrintSize 9x11 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize 9x11*UIConstraints: *EFPrintSize A3 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize A3*UIConstraints: *EFPrintSize A3 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize A3*UIConstraints: *EFPrintSize A4Tab *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A5 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize A5*UIConstraints: *EFPrintSize B4 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize B4*UIConstraints: *EFPrintSize B4 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize B4*UIConstraints: *EFPrintSize Env10 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize Env10*UIConstraints: *EFPrintSize Env10 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize Env10*UIConstraints: *EFPrintSize Env10 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize Env10*UIConstraints: *EFPrintSize Env10 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize Env10*UIConstraints: *EFPrintSize EnvC5 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvC5 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvC5 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvC5 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvMonarch *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize EnvMonarch *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize EnvMonarch *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize EnvMonarch *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize Executive *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize Executive*UIConstraints: *EFPrintSize Executive *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize Executive*UIConstraints: *EFPrintSize ISOB5 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize ISOB5*UIConstraints: *EFPrintSize ISOB5 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize ISOB5*UIConstraints: *EFPrintSize ISOB5 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize ISOB5*UIConstraints: *EFPrintSize ISOB5 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize ISOB5*UIConstraints: *EFPrintSize Legal *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize Legal*UIConstraints: *EFPrintSize Legal *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize Legal*UIConstraints: *EFPrintSize SRA3 *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize SRA3*UIConstraints: *EFPrintSize Statement *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize Statement*UIConstraints: *EFPrintSize TabloidExtra *EFSort CollateWithShift*UIConstraints: *EFSort CollateWithShift *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFSort GroupWithShift*UIConstraints: *EFSort GroupWithShift *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize Tabloid *EFSort CrossCollate*UIConstraints: *EFSort CrossCollate *EFPrintSize Tabloid*UIConstraints: *EFPrintSize Tabloid *EFSort CrossGroup*UIConstraints: *EFSort CrossGroup *EFPrintSize Tabloid*UIConstraints: *EFPrintSize 9x11 *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize 9x11*UIConstraints: *EFPrintSize A4Tab *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A5 *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize A5*UIConstraints: *EFPrintSize A5 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize A5*UIConstraints: *EFPrintSize B5 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize B5*UIConstraints: *EFPrintSize Env10 *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize Env10*UIConstraints: *EFPrintSize Env10 *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize Env10*UIConstraints: *EFPrintSize Env10 *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize Env10*UIConstraints: *EFPrintSize Env10 *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize Env10*UIConstraints: *EFPrintSize Env10 *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize Env10*UIConstraints: *EFPrintSize Env10 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize Env10*UIConstraints: *EFPrintSize EnvC5 *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvC5 *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvC5 *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvC5 *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvC5 *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvC5 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize EnvC5*UIConstraints: *EFPrintSize EnvMonarch *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize EnvMonarch *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize EnvMonarch *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize EnvMonarch *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize EnvMonarch *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize EnvMonarch *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize EnvMonarch*UIConstraints: *EFPrintSize Executive *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize Executive*UIConstraints: *EFPrintSize ISOB5 *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize ISOB5*UIConstraints: *EFPrintSize ISOB5 *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize ISOB5*UIConstraints: *EFPrintSize ISOB5 *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize ISOB5*UIConstraints: *EFPrintSize ISOB5 *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize ISOB5*UIConstraints: *EFPrintSize ISOB5 *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize ISOB5*UIConstraints: *EFPrintSize ISOB5 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize ISOB5*UIConstraints: *EFPrintSize SRA3 *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize SRA3*UIConstraints: *EFPrintSize Statement *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize Statement*UIConstraints: *EFPrintSize Statement *EFStapler Stitch*UIConstraints: *EFStapler Stitch *EFPrintSize Statement*UIConstraints: *EFPrintSize TabloidExtra *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize TabloidExtra *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize 9x11 *InputSlot Tray1*UIConstraints: *InputSlot Tray1 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *InputSlot Tray2*UIConstraints: *InputSlot Tray2 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *InputSlot Tray3*UIConstraints: *InputSlot Tray3 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *InputSlot Tray4*UIConstraints: *InputSlot Tray4 *EFPrintSize 9x11*UIConstraints: *EFPrintSize 9x11 *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize 9x11*UIConstraints: *EFPrintSize A3 *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize A3*UIConstraints: *EFPrintSize A4Tab *InputSlot Tray1*UIConstraints: *InputSlot Tray1 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *InputSlot Tray2*UIConstraints: *InputSlot Tray2 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *InputSlot Tray3*UIConstraints: *InputSlot Tray3 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *InputSlot Tray4*UIConstraints: *InputSlot Tray4 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A4Tab *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize A4Tab*UIConstraints: *EFPrintSize A5 *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize A5*UIConstraints: *EFPrintSize B4 *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize B4*UIConstraints: *EFPrintSize Executive *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize Executive*UIConstraints: *EFPrintSize Legal *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize Legal*UIConstraints: *EFPrintSize SRA3 *InputSlot Tray1*UIConstraints: *InputSlot Tray1 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *InputSlot Tray2*UIConstraints: *InputSlot Tray2 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *InputSlot Tray3*UIConstraints: *InputSlot Tray3 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *InputSlot Tray4*UIConstraints: *InputSlot Tray4 *EFPrintSize SRA3*UIConstraints: *EFPrintSize SRA3 *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize SRA3*UIConstraints: *EFPrintSize Statement *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize Statement*UIConstraints: *EFPrintSize TabloidExtra *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize TabloidExtra*UIConstraints: *EFPrintSize Tabloid *InputSlot Tray5*UIConstraints: *InputSlot Tray5 *EFPrintSize Tabloid*UIConstraints: *EFPunchEdge Left *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPunchEdge Left*UIConstraints: *EFPunchEdge Right *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPunchEdge Right*UIConstraints: *EFPunchEdge Top *EFRIPBooklet*UIConstraints: *EFRIPBooklet *EFPunchEdge Top*UIConstraints: *EFRIPBooklet Double *EFStapler*UIConstraints: *EFStapler *EFRIPBooklet Double*UIConstraints: *EFRIPBooklet NestSaddleL *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFRIPBooklet NestSaddleL*UIConstraints: *EFRIPBooklet NestSaddleL *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFRIPBooklet NestSaddleL*UIConstraints: *EFRIPBooklet NestSaddleL *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFRIPBooklet NestSaddleL*UIConstraints: *EFRIPBooklet NestSaddleL *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFRIPBooklet NestSaddleL*UIConstraints: *EFRIPBooklet NestSaddleL *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFRIPBooklet NestSaddleL*UIConstraints: *EFRIPBooklet NestSaddleR *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFRIPBooklet NestSaddleR*UIConstraints: *EFRIPBooklet NestSaddleR *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFRIPBooklet NestSaddleR*UIConstraints: *EFRIPBooklet NestSaddleR *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFRIPBooklet NestSaddleR*UIConstraints: *EFRIPBooklet NestSaddleR *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFRIPBooklet NestSaddleR*UIConstraints: *EFRIPBooklet NestSaddleR *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFRIPBooklet NestSaddleR*UIConstraints: *EFRIPBooklet NestSaddleT *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFRIPBooklet NestSaddleT*UIConstraints: *EFRIPBooklet NestSaddleT *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFRIPBooklet NestSaddleT*UIConstraints: *EFRIPBooklet NestSaddleT *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFRIPBooklet NestSaddleT*UIConstraints: *EFRIPBooklet NestSaddleT *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFRIPBooklet NestSaddleT*UIConstraints: *EFRIPBooklet NestSaddleT *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFRIPBooklet NestSaddleT*UIConstraints: *EFRIPBooklet Speed *EFStapler*UIConstraints: *EFStapler *EFRIPBooklet Speed*UIConstraints: *EFRIPBooklet TwoUpRight *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFRIPBooklet TwoUpRight*UIConstraints: *EFRIPBooklet TwoUpRight *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFRIPBooklet TwoUpRight*UIConstraints: *EFRIPBooklet TwoUpRight *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFRIPBooklet TwoUpRight*UIConstraints: *EFRIPBooklet TwoUpRight *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFRIPBooklet TwoUpRight*UIConstraints: *EFRIPBooklet TwoUpRight *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFRIPBooklet TwoUpRight*UIConstraints: *EFRIPBooklet TwoUpTop *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFRIPBooklet TwoUpTop*UIConstraints: *EFRIPBooklet TwoUpTop *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFRIPBooklet TwoUpTop*UIConstraints: *EFRIPBooklet TwoUpTop *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFRIPBooklet TwoUpTop*UIConstraints: *EFRIPBooklet TwoUpTop *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFRIPBooklet TwoUpTop*UIConstraints: *EFRIPBooklet TwoUpTop *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFRIPBooklet TwoUpTop*UIConstraints: *EFRIPBooklet TwoUp *EFStapler 1UpLeftS*UIConstraints: *EFStapler 1UpLeftS *EFRIPBooklet TwoUp*UIConstraints: *EFRIPBooklet TwoUp *EFStapler 1UpRightS*UIConstraints: *EFStapler 1UpRightS *EFRIPBooklet TwoUp*UIConstraints: *EFRIPBooklet TwoUp *EFStapler 2Left*UIConstraints: *EFStapler 2Left *EFRIPBooklet TwoUp*UIConstraints: *EFRIPBooklet TwoUp *EFStapler 2Right*UIConstraints: *EFStapler 2Right *EFRIPBooklet TwoUp*UIConstraints: *EFRIPBooklet TwoUp *EFStapler 2Up*UIConstraints: *EFStapler 2Up *EFRIPBooklet TwoUp*UIConstraints: *EFRIPBooklet *EFUseMaster*UIConstraints: *EFUseMaster *EFRIPBooklet*UIConstraints: *EFResolution 1200x1200dpi *EFUseMaster*UIConstraints: *EFUseMaster *EFResolution 1200x1200dpi*UIConstraints: *EFSeparations True *EFSpotColors OFF*UIConstraints: *EFSpotColors OFF *EFSeparations True*UIConstraints: *EFSeparations True *EFTrapping True*UIConstraints: *EFTrapping True *EFSeparations True*UIConstraints: *EFSeparations True *EFUseMaster*UIConstraints: *EFUseMaster *EFSeparations True*UIConstraints: *EFSimSpeed BETR *EFSimulation MATCHCOPY*UIConstraints: *EFSimulation MATCHCOPY *EFSimSpeed BETR*UIConstraints: *EFSimSpeed BETR *EFSimulation NONE*UIConstraints: *EFSimulation NONE *EFSimSpeed BETR*UIConstraints: *EFSimSpeed FAST *EFSimulation MATCHCOPY*UIConstraints: *EFSimulation MATCHCOPY *EFSimSpeed FAST*UIConstraints: *EFSimSpeed FAST *EFSimulation NONE*UIConstraints: *EFSimulation NONE *EFSimSpeed FAST*UIConstraints: *EFSimSpeed S4X4 *EFSimulation MATCHCOPY*UIConstraints: *EFSimulation MATCHCOPY *EFSimSpeed S4X4*UIConstraints: *EFSimSpeed S4X4 *EFSimulation NONE*UIConstraints: *EFSimulation NONE *EFSimSpeed S4X4*UIConstraints: *EFSort CrossGroup *EFTrustMark Type1*UIConstraints: *EFTrustMark Type1 *EFSort CrossGroup*UIConstraints: *EFSort GroupWithShift *EFTrustMark Type1*UIConstraints: *EFTrustMark Type1 *EFSort GroupWithShift*UIConstraints: *EFSort Group *EFTrustMark Type1*UIConstraints: *EFTrustMark Type1 *EFSort Group*UIConstraints: *EFTrayAlignment True *InputSlot AutoSelect*UIConstraints: *InputSlot AutoSelect *EFTrayAlignment True*% ========== NonUIConstraints ==========*NonUIConstraints: *CustomPageSize True *EFSort CollateWithShift*NonUIConstraints: *EFSort CollateWithShift *CustomPageSize True*NonUIConstraints: *CustomPageSize True *EFSort CrossCollate*NonUIConstraints: *EFSort CrossCollate *CustomPageSize True*NonUIConstraints: *CustomPageSize True *EFSort CrossGroup*NonUIConstraints: *EFSort CrossGroup *CustomPageSize True*NonUIConstraints: *CustomPageSize True *EFSort GroupWithShift*NonUIConstraints: *EFSort GroupWithShift *CustomPageSize True*NonUIConstraints: *CustomPageSize True *EFTrayAlignment True*NonUIConstraints: *EFTrayAlignment True *CustomPageSize True*% ========== General Information ==========*DefaultResolution: 600dpi*Throughput: "51"*LanguageLevel: "3"*TTRasterizer: Type42*ColorDevice: True*DefaultColorSpace: CMYK*FreeVM: "15728640"*FCacheSize None: 524288*RequiresPageRegion All: True*LandscapeOrientation: Plus90*% ========== Mixed Media ==========*% ****** Enable MM1.2 & MM1.3*% ****** Enable MM1.3*%EFIKey [ : ][EFMixedMedia:string]*%EFIKeyAttribute [EFMixedMedia][version:13]*%EFIValue [EFMixedMedia:CWS]*%EFIValue [EFMixedMedia:driver]*% ***** Enable MM1.2*%EFIKey [ : ][EFMixedMedia:string]*%EFIKeyAttribute [EFMixedMedia][version:12]*%EFIValue [EFMixedMedia:CWS]*%EFIValue [EFMixedMedia:driver]*% ***** *% ***** Enable chapters*%EFIKey [ : ][EFEnableChapter:string]*%EFIValue [EFEnableChapter:CWS]*%EFIValue [EFEnableChapter:driver]*% ***** Enable Subset finishing*%EFIKey [ : ][EFEnableSubsetFinishing:string]*%EFIValue [EFEnableSubsetFinishing:CWS]*%EFIValue [EFEnableSubsetFinishing:driver]*% ***** Enable Mixed Media Insertions*%EFIKey [ : ][EFEnableMixedMediaInsertion:string]*%EFIValue [EFEnableMixedMediaInsertion:CWS]*%EFIValue [EFEnableMixedMediaInsertion:driver]*% ***** Enable Constraint Enforcement*%EFIKey [ : ][EFMixedMediaEnforceConstraints:string]*%EFIValue [EFMixedMediaEnforceConstraints:CWS]*%EFIValue [EFMixedMediaEnforceConstraints:driver]*% ========== Paper Catalog ==========*% ***** Enable Paper Catalog 3.5*%EFIKey [ : ][EFPaperCatalog:string]*%EFIKeyAttribute [EFPaperCatalog][version:35]*%EFIValue [EFPaperCatalog:CWS]*%EFIValue [EFPaperCatalog:driver]*%EFILocal [EFPaperCatalog:Paper Catalog]*%EFIKey [ : ][EFPCName:string]*%EFIEScope [column]*%EFIKeyAttribute [EFPCName][polymorphic:yes]*%EFILocal [EFPCName:Paper Catalog Name]*% ========== UI Menus ==========*OpenGroup: FPJobInfo1/Job Info*%EFIFlags *EFNoAccountBW Column|Command|Impose|Spooler*%EFIGroup *EFNoAccountBW FPJobInfo/Job Info*OpenUI *EFNoAccountBW/Do Not Use Job Accounting for B&W Printing:Boolean*OrderDependency: 50.0 AnySetup *EFNoAccountBW*DefaultEFNoAccountBW: False*EFNoAccountBW False/Off: " userdict /XJXSetPrinterinfo known { (FORCEMONOCHROME) (FALSE) XJXSetPrinterinfo } if "*EFNoAccountBW True/On: " userdict /XJXSetPrinterinfo known { (FORCEMONOCHROME) (TRUE) XJXSetPrinterinfo } if "*CloseUI: *EFNoAccountBW*CloseGroup: FPJobInfo1*%EFIFlags *EFCourierSubst Setup*%EFIGroup *EFCourierSubst FPJobInfo/Job Info*OpenUIEFI *EFCourierSubst/Allow Courier Substitution:PickOne*OrderDependency: 35.0 AnySetup *EFCourierSubst*DefaultEFCourierSubst: YES*EFCourierSubst NO/No: ""*EFCourierSubst YES/Yes: ""*CloseUIEFI: *EFCourierSubst*%EFIFlags *EFMailboxNum Command|Impose|Rerip|Spooler*%EFIGroup *EFMailboxNum FPJobInfo/Job Info*%EFIJobNote *EFMailboxNum/Select Mailbox :300:Hyphen|MultiComma|MultiSpace|Numeric|TwoCharField*%EFMailboxNum: " /XJXsetMailboxString where { pop (<*EFMailboxNum>) XJXsetMailboxString } if "*%EFIFlags *EFMailboxName Command|Impose|Rerip*%EFIGroup *EFMailboxName FPJobInfo/Job Info*%EFIJobNote *EFMailboxName/File Name(for Mail Box / Form Store):128:*%EFMailboxName: " /XJXsetMailNameString where { pop (<*EFMailboxName>) XJXsetMailNameString} if "*OpenGroup: FPJobInfo1/Job Info*%EFIFlags *EFDestination Column|Command|Spooler*%EFIGroup *EFDestination FPJobInfo/Job Info*OpenUI *EFDestination/Destination:PickOne*OrderDependency: 13.0 AnySetup *EFDestination*DefaultEFDestination: Printer*EFDestination Printer/Printer: " /XJXsetDevice where { pop 0 XJXsetDevice} if "*EFDestination Mailbox/Mail Box: " /XJXsetDevice where { pop 2 XJXsetDevice } if "*EFDestination SecuredPrint/Secured Print: " /XJXsetDevice where { pop 3 XJXsetDevice } if "*EFDestination FormStore/Form Store: " /XJXsetDevice where { pop 4 XJXsetDevice } if "*CloseUI: *EFDestination*CloseGroup: FPJobInfo1*%EFIFlags *EFUserAuthName *%EFIGroup *EFUserAuthName FPJobInfo/Job Info*%EFIJobNote *EFUserAuthName/User Name:64:*%EFUserAuthName: " /XJXsetUserName where { pop (<*EFUserAuthName>) XJXsetUserName} if "*%EFIFlags *EFUserAuthPwd *%EFIGroup *EFUserAuthPwd FPJobInfo/Job Info*%EFIJobNote *EFUserAuthPwd/Password:64:Encrypt|Password*%EFUserAuthPwd: " /XJXsetAccessCode where { pop (<*EFUserAuthPwd>) XJXsetAccessCode} if "*%EFIFlags *Notes1 Admin|Column|Command|Impose|Spooler*%EFIGroup *Notes1 FPJobInfo/Job Info*%EFIJobNote *Notes1/Notes:31:*%Notes1: "%%EFICustom1: <*Notes1> "*%EFIFlags *EFPersUserID *%EFIGroup *EFPersUserID FPJobInfo/Job Info*%EFIJobNote *EFPersUserID/Department ID:7:Numeric*%EFPersUserID: " /XJXsetUserID where { pop (<*EFPersUserID>) XJXsetUserID} if "*%EFIFlags *DeptPassword *%EFIGroup *DeptPassword FPJobInfo/Job Info*%EFIJobNote *DeptPassword/Department Password:7:Numeric|Password*%DeptPassword: "%%DeptPassword: <*DeptPassword> "*%EFIFlags *Instruct Column|Command|Impose|Spooler*%EFIGroup *Instruct FPJobInfo/Job Info*%EFIJobNote *Instruct/Instructions:127:*%Instruct: "%%EFICustom3: <*Instruct> "*%EFIFlags *EFSecuredPasswd Impose*%EFIGroup *EFSecuredPasswd FPJobInfo/Job Info*%EFIJobNote *EFSecuredPasswd/Secured Password:7:Numeric|Password|SecPrint*%EFSecuredPasswd: " /XJXsetSecurePasswd where { pop (<*EFSecuredPasswd>) XJXsetSecurePasswd } if "*OpenGroup: FPJobInfo1/Job Info*%EFIFlags *EFRaster Column|Impose|Rerip|Spooler*%EFIGroup *EFRaster FPJobInfo/Job Info*OpenUI *EFRaster/Print Queue Action:PickOne*OrderDependency: 65.0 AnySetup *EFRaster*DefaultEFRaster: False*EFRaster False/Print: " userdict /XJXsetraster known { 0 XJXsetraster } if "*EFRaster True/Print and Hold: " userdict /XJXsetraster known { 1 XJXsetraster } if "*EFRaster RipNHold/Process and Hold: " userdict /XJXsetraster known { 2 XJXsetraster } if "*CloseUI: *EFRaster*CloseGroup: FPJobInfo1*%EFIFlags *EFPSError Setup*%EFIGroup *EFPSError FPJobInfo/Job Info*OpenUIEFI *EFPSError/Print to PS Error:PickOne*OrderDependency: 40.0 AnySetup *EFPSError*DefaultEFPSError: NO*EFPSError NO/No: ""*EFPSError YES/Yes: ""*CloseUIEFI: *EFPSError*%EFIFlags *EFTabPosition Column|Command|Spooler*%EFIGroup *EFTabPosition FPPaperSource/Media*%EFIRange *EFTabPosition/Select Tab Position :(0;254;1;0): "/XJXsetTabShift where { pop <*EFTabPosition> XJXsetTabShift} if"*%EFIKeyAttribute [EFTabPosition][polymorphic:yes]*OpenGroup: FPPaperSource1/Media 1*%EFIFlags *EFPrintSize Column|MMInsertion|MediaKey|MixedMedia|Rerip|Spooler*%EFIGroup *EFPrintSize FPPaperSource/Media*OpenUI *EFPrintSize/Paper Size:PickOne*OrderDependency: 50.0 AnySetup *EFPrintSize*DefaultEFPrintSize: SameAsPageSize*EFPrintSize SameAsPageSize/Same As Document Size: ""*EFPrintSize A3/A3: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFA3) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (SEFA3) XJXsetPrintSize} if} ifelse "*End*EFPrintSize B4/B4: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFB4) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (SEFB4) XJXsetPrintSize} if} ifelse "*End*EFPrintSize A4/A4: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (LEFA4) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (LEFA4) XJXsetPrintSize} if} ifelse "*End*EFPrintSize B5/B5: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (LEFB5) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (LEFB5) XJXsetPrintSize} if} ifelse "*End*EFPrintSize A5/A5: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (LEFA5) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (LEFA5) XJXsetPrintSize} if} ifelse "*End*EFPrintSize Tabloid/11x17: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFTabloid) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (SEFTabloid) XJXsetPrintSize} if} ifelse "*End*EFPrintSize Legal/Legal: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFLegal) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (SEFLegal) XJXsetPrintSize} if} ifelse "*End*EFPrintSize Letter/Letter: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (LEFLetter) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (LEFLetter) XJXsetPrintSize} if} ifelse "*End*EFPrintSize Statement/Statement: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (LEFStatement) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (LEFStatement) XJXsetPrintSize} if} ifelse "*End*EFPrintSize SRA3/SRA3: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFSRA3) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (SEFSRA3) XJXsetPrintSize} if} ifelse "*End*EFPrintSize TabloidExtra/12x18: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFARCHB) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (SEFARCHB) XJXsetPrintSize} if} ifelse "*End*EFPrintSize Executive/Executive: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (LEFExecutive) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (LEFExecutive) XJXsetPrintSize} if} ifelse "*End*EFPrintSize A4Tab/Tab Paper (A4): " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (LEFA4Tab) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (LEFA4Tab) XJXsetPrintSize} if} ifelse "*End*EFPrintSize 9x11/Tab Paper (Letter): " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (LEFNineByEleven) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (LEFNineByEleven) XJXsetPrintSize} if} ifelse "*End*EFPrintSize Env10/COM10: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFEnv10) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (SEFEnv10) XJXsetPrintSize} if} ifelse "*End*EFPrintSize EnvMonarch/Monarch: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFEnvMonarch) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (SEFEnvMonarch) XJXsetPrintSize} if} ifelse "*End*EFPrintSize EnvC5/ISO-C5: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFEnvC5) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop () XJXSetImageable} if /XJXsetPrintSize where {pop (SEFEnvC5) XJXsetPrintSize} if} ifelse "*End*EFPrintSize ISOB5/ISO-B5: " userdict /XJXEFIsetpageproperties known{<< /XJXSetImageable [ () ] /XJXsetPrintSize [ (SEFISOB5) ] >> XJXEFIsetpageproperties}{/XJXSetImageable where {pop (SEFISOB5) XJXSetImageable} if /XJXsetPrintSize where {pop () XJXsetPrintSize} if} ifelse "*End*EFPrintSize CustomPrintSize/Custom Paper Size: ""*CloseUI: *EFPrintSize*CloseGroup: FPPaperSource1*OpenGroup: FPPaperSource1/Media 1*%EFIFlags *EFMediaType Booklet|Column|Command|Impose|MMInsertion|MediaKey|MixedMedia|Rerip|Spooler*%EFIGroup *EFMediaType FPPaperSource/Media*OpenUI *EFMediaType/Media Type:PickOne*OrderDependency: 50.0 AnySetup *EFMediaType*DefaultEFMediaType: Any*EFMediaType Any/Any Media Type: "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 199 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 199 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Plain/Plain (64-105g/m2): "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 0 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 0 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Transparency/Transparency : "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 4 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 4 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Translucent/Tracing Paper (64-79g/m2): "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 140 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 140 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Tabstock/Tab Paper (160-203g/m2): "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 130 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 130 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Labels/Labels: "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 104 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 104 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Recycled/Recycled (64-80g/m2): "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 105 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 105 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Color/Color: "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 106 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 106 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Glossy/Glossy Paper (157-209g/m2): "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 3 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 3 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Bond/Bond Paper: "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 1 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 1 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Prepunched/Pre-punched (75-90g/m2): "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 103 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 103 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Heavy/Heavy1 (106-209g/m2): "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 108 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 108 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Extraheavy/Heavy2 (210-253g/m2): "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 150 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 150 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Envelope/Envelope: "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 112 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 112 XJXsetmediatypeV2 } if} ifelse"*End*EFMediaType Letterhead/Letterhead (106-209g/m2): "userdict /XJXEFIsetpageproperties known{  << /XJXsetmediatypeV2 [ 102 ] >> XJXEFIsetpageproperties  }{  userdict /XJXsetmediatypeV2 known{ 102 XJXsetmediatypeV2 } if} ifelse"*End*?EFMediaType: "/XJGetPrinterInfo where { pop (mediatype) XJGetPrinterInfo == } if"*CloseUI: *EFMediaType*CloseGroup: FPPaperSource1*OpenGroup: FPPaperSource1/Media 1*%EFIFlags *InputSlot Column|Command|Impose|MMInsertion|MixedMedia|Spooler*%EFIGroup *InputSlot FPPaperSource/Media*OpenUI *InputSlot/Paper Source:PickOne*OrderDependency: 20.0 AnySetup *InputSlot*DefaultInputSlot: AutoSelect*InputSlot AutoSelect/Auto Tray Select: "userdict /XJXEFIsetpageproperties known{ << /XJXsettrayselV2 [ 7 ] >> XJXEFIsetpageproperties }{ /XJXsettrayselV2 where{ pop 7 XJXsettrayselV2 } if} ifelse"*End*InputSlot ManualFeed/Stack Bypass: "userdict /XJXEFIsetpageproperties known{ << /XJXsettrayselV2 [ 2 ] >> XJXEFIsetpageproperties }{ /XJXsettrayselV2 where{ pop 2 XJXsettrayselV2 } if} ifelse"*End*InputSlot Tray1/Drawer 1: "userdict /XJXEFIsetpageproperties known{ << /XJXsettrayselV2 [ 1 ] >> XJXEFIsetpageproperties }{ /XJXsettrayselV2 where{ pop 1 XJXsettrayselV2 } if} ifelse"*End*InputSlot Tray2/Drawer 2: "userdict /XJXEFIsetpageproperties known{ << /XJXsettrayselV2 [ 4 ] >> XJXEFIsetpageproperties }{ /XJXsettrayselV2 where{ pop 4 XJXsettrayselV2 } if} ifelse"*End*InputSlot Tray3/Drawer 3: "userdict /XJXEFIsetpageproperties known{ << /XJXsettrayselV2 [ 5 ] >> XJXEFIsetpageproperties }{ /XJXsettrayselV2 where{ pop 5 XJXsettrayselV2 } if} ifelse"*End*InputSlot Tray4/Drawer 4: "userdict /XJXEFIsetpageproperties known{ << /XJXsettrayselV2 [ 20 ] >> XJXEFIsetpageproperties }{ /XJXsettrayselV2 where{ pop 20 XJXsettrayselV2 } if} ifelse"*End*InputSlot Tray5/Side Paper Deck: "userdict /XJXEFIsetpageproperties known{ << /XJXsettrayselV2 [ 21 ] >> XJXEFIsetpageproperties }{ /XJXsettrayselV2 where{ pop 21 XJXsettrayselV2 } if} ifelse"*End*CloseUI: *InputSlot*CloseGroup: FPPaperSource1*OpenGroup: FPPaperSource1/Media 1*%EFIFlags *EFTrayAlignment Column|Command|Impose|Rerip|Spooler*%EFIGroup *EFTrayAlignment FPPaperSource/Media*OpenUI *EFTrayAlignment/Tray Alignment:Boolean*OrderDependency: 60.0 AnySetup *EFTrayAlignment*DefaultEFTrayAlignment: False*EFTrayAlignment False/Disable: "/XJXUseTrayAlignment where { pop false XJXUseTrayAlignment } if "*EFTrayAlignment True/Enable: "/XJXUseTrayAlignment where { pop true XJXUseTrayAlignment } if "*CloseUI: *EFTrayAlignment*CloseGroup: FPPaperSource1*OpenGroup: FPPaperSource1/Media 1*%EFIFlags *EFCover Command|Rerip|Spooler*%EFIGroup *EFCover FPPaperSource/Media*OpenUI *EFCover/Front Cover Mode:PickOne*OrderDependency: 50.0 AnySetup *EFCover*DefaultEFCover: False*EFCover False/None: " /XJXsetfrontcoverV2 where { pop (Off) XJXsetfrontcoverV2 } if "*EFCover Blank/Blank Page: " /XJXsetfrontcoverV2 where { pop (Blank) XJXsetfrontcoverV2 } if "*EFCover Side1/Front Page Print: " /XJXsetfrontcoverV2 where { pop (Simplex) XJXsetfrontcoverV2 } if "*EFCover Side2/Back Page Print: " /XJXsetfrontcoverV2 where { pop (Simplex2) XJXsetfrontcoverV2 } if "*EFCover Both/Both Page Print: " /XJXsetfrontcoverV2 where { pop (Duplex) XJXsetfrontcoverV2 } if "*CloseUI: *EFCover*CloseGroup: FPPaperSource1*OpenGroup: FPPaperSource2/Media 2*%EFIFlags *EFCoverTray Command|Rerip|Spooler*%EFIGroup *EFCoverTray FPPaperSource/Media*OpenUI *EFCoverTray/Front Cover Source:PickOne*OrderDependency: 20.0 AnySetup *EFCoverTray*DefaultEFCoverTray: ManualFeed*EFCoverTray ManualFeed/Stack Bypass: "/XJXsetFirstPageTrayV2 where{ pop 2 XJXsetFirstPageTrayV2 } if "*End*EFCoverTray Tray1/Drawer 1: "/XJXsetFirstPageTrayV2 where{ pop 1 XJXsetFirstPageTrayV2 } if "*End*EFCoverTray Tray2/Drawer 2: "/XJXsetFirstPageTrayV2 where{ pop 4 XJXsetFirstPageTrayV2 } if "*End*EFCoverTray Tray3/Drawer 3: "/XJXsetFirstPageTrayV2 where{ pop 5 XJXsetFirstPageTrayV2 } if "*End*EFCoverTray Tray4/Drawer 4: "/XJXsetFirstPageTrayV2 where{ pop 20 XJXsetFirstPageTrayV2 } if "*End*EFCoverTray Tray5/Side Paper Deck: "/XJXsetFirstPageTrayV2 where{ pop 21 XJXsetFirstPageTrayV2 } if "*End*CloseUI: *EFCoverTray*CloseGroup: FPPaperSource2*OpenGroup: FPPaperSource2/Media 2*%EFIFlags *EFBkCover Command|Rerip|Spooler*%EFIGroup *EFBkCover FPPaperSource/Media*OpenUI *EFBkCover/Back Cover Mode:PickOne*OrderDependency: 50.0 AnySetup *EFBkCover*DefaultEFBkCover: False*EFBkCover False/None: " /XJXsetbackcover where { pop (Off) XJXsetbackcover } if "*EFBkCover Blank/Blank Page: " /XJXsetbackcover where { pop (Blank) XJXsetbackcover } if "*EFBkCover Side1/Front Page Print: " /XJXsetbackcover where { pop (Simplex) XJXsetbackcover } if "*EFBkCover Side2/Back Page Print: " /XJXsetbackcover where { pop (Simplex2) XJXsetbackcover } if "*EFBkCover Both/Both Page Print: " /XJXsetbackcover where { pop (Duplex) XJXsetbackcover } if "*CloseUI: *EFBkCover*CloseGroup: FPPaperSource2*OpenGroup: FPPaperSource2/Media 2*%EFIFlags *EFBkCoverTray Command|Rerip|Spooler*%EFIGroup *EFBkCoverTray FPPaperSource/Media*OpenUI *EFBkCoverTray/Back Cover Source:PickOne*OrderDependency: 20.0 AnySetup *EFBkCoverTray*DefaultEFBkCoverTray: ManualFeed*EFBkCoverTray ManualFeed/Stack Bypass: " /XJXsetBackCoverTray where{ pop 2 XJXsetBackCoverTray} if "*End*EFBkCoverTray Tray1/Drawer 1: " /XJXsetBackCoverTray where{ pop 1 XJXsetBackCoverTray } if "*End*EFBkCoverTray Tray2/Drawer 2: " /XJXsetBackCoverTray where{ pop 4 XJXsetBackCoverTray } if "*End*EFBkCoverTray Tray3/Drawer 3: " /XJXsetBackCoverTray where{ pop 5 XJXsetBackCoverTray } if "*End*EFBkCoverTray Tray4/Drawer 4: " /XJXsetBackCoverTray where{ pop 20 XJXsetBackCoverTray } if "*End*EFBkCoverTray Tray5/Side Paper Deck: " /XJXsetBackCoverTray where{ pop 21 XJXsetBackCoverTray } if "*End*CloseUI: *EFBkCoverTray*CloseGroup: FPPaperSource2*%EFIFlags *EFDefPaperSize Setup*%EFIGroup *EFDefPaperSize FPPaperSource/Media*OpenUIEFI *EFDefPaperSize/Default Paper Sizes:PickOne*OrderDependency: 20.0 AnySetup *EFDefPaperSize*DefaultEFDefPaperSize: US*EFDefPaperSize US/US: ""*EFDefPaperSize Metric/Metric: ""*CloseUIEFI: *EFDefPaperSize*OpenGroup: FPPaperSource2/Media 2*%EFIFlags *EFMediaInterlv Column|Command|Spooler*%EFIGroup *EFMediaInterlv FPPaperSource/Media*OpenUI *EFMediaInterlv/Transparency Interleaving:PickOne*OrderDependency: 50.0 AnySetup *EFMediaInterlv*DefaultEFMediaInterlv: False*EFMediaInterlv False/Off: " userdict /XJXsetTransInterleave known { 0 XJXsetTransInterleave } if "*EFMediaInterlv Blank/Blank Interleave: " userdict /XJXsetTransInterleave known { 1 XJXsetTransInterleave } if "*EFMediaInterlv Printed/Printed Interleave: " userdict /XJXsetTransInterleave known { 2 XJXsetTransInterleave } if "*CloseUI: *EFMediaInterlv*CloseGroup: FPPaperSource2*%EFIFlags *EFPrintCover Setup*%EFIGroup *EFPrintCover FPPaperSource/Media*OpenUIEFI *EFPrintCover/Print Cover Page:PickOne*OrderDependency: 30.0 AnySetup *EFPrintCover*DefaultEFPrintCover: False*EFPrintCover False/No: ""*EFPrintCover BeforeJob/Yes: ""*CloseUIEFI: *EFPrintCover*OpenGroup: FPPaperSource2/Media 2*%EFIFlags *EFMMInsType Command|Impose*%EFIGroup *EFMMInsType FPPaperSource/Media*OpenUI *EFMMInsType/Mixed Media Insertion Type:PickOne*OrderDependency: 50.0 AnySetup *EFMMInsType*DefaultEFMMInsType: None*EFMMInsType None/None: ""*EFMMInsType Blank/Blank: ""*EFMMInsType Tab/Tab: ""*CloseUI: *EFMMInsType*CloseGroup: FPPaperSource2*OpenGroup: FPPaperSource3/Media 3*%EFIFlags *EFMMInUse Command*%EFIGroup *EFMMInUse FPPaperSource/Media*OpenUI *EFMMInUse/Mixed Media In Use:Boolean*OrderDependency: 50.0 AnySetup *EFMMInUse*DefaultEFMMInUse: False*EFMMInUse False/No: ""*EFMMInUse True/Yes: ""*CloseUI: *EFMMInUse*CloseGroup: FPPaperSource3*%EFIFlags *EFScale Command|Rerip*%EFIGroup *EFScale FPLayout/Layout*%EFIRange *EFScale/Scale:(25;400;1;100): " /XJXSetEFScale where { pop <*EFScale> XJXSetEFScale} if "*%EFIKeyAttribute [EFScale][polymorphic:yes]*OpenGroup: FPLayout1/Layout 1*%EFIFlags *EFAutoScaling Column|Command|NoUIPageOverride|Rerip|Setup|Spooler*%EFIGroup *EFAutoScaling FPLayout/Layout*OpenUI *EFAutoScaling/Scale to Fit:Boolean*OrderDependency: 40.0 AnySetup *EFAutoScaling*DefaultEFAutoScaling: False*EFAutoScaling False/Off: " userdict /XJXEFIsetpageproperties known{ << /XJXSetAutoScale [ false ] >> XJXEFIsetpageproperties }{ /XJXSetAutoScale where { pop false XJXSetAutoScale } if } ifelse "*End*EFAutoScaling True/On: " userdict /XJXEFIsetpageproperties known{ << /XJXSetAutoScale [ true ] >> XJXEFIsetpageproperties }{ /XJXSetAutoScale where { pop true XJXSetAutoScale } if } ifelse "*End*CloseUI: *EFAutoScaling*CloseGroup: FPLayout1*OpenGroup: FPLayout1/Layout 1*%EFIFlags *EFDuplex Column|Command|MMInsertion|MixedMedia|Rerip|Spooler*%EFIGroup *EFDuplex FPLayout/Layout*OpenUI *EFDuplex/2-sided Printing:PickOne*OrderDependency: 50.0 AnySetup *EFDuplex*DefaultEFDuplex: False*EFDuplex False/Off: " userdict /XJXEFIsetpageproperties known   { << /XJXsetduplex [ false ] >> XJXEFIsetpageproperties }  { userdict /XJXsetduplex known    { false XJXsetduplex } { << /Duplex false >> setpagedevice } ifelse  } ifelse "*End*EFDuplex LongEdge/Long Edge Binding: " userdict /XJXEFIsetpageproperties known  { << /XJXsetduplex [ true ] /XJXSetBinding [ (long) ] >> XJXEFIsetpageproperties }  { userdict /XJXsetduplex known    { true XJXsetduplex } { << /Duplex true >> setpagedevice } ifelse    userdict /XJXSetBinding known { (long) XJXSetBinding } if  } ifelse "*End*EFDuplex ShortEdge/Short Edge Binding: " userdict /XJXEFIsetpageproperties known  { << /XJXsetduplex [ true ] /XJXSetBinding [ (short) ] >> XJXEFIsetpageproperties }  { userdict /XJXsetduplex known    { true XJXsetduplex } { << /Duplex true >> setpagedevice } ifelse    userdict /XJXSetBinding known { (short) XJXSetBinding } if  } ifelse "*End*CloseUI: *EFDuplex*CloseGroup: FPLayout1*OpenGroup: FPLayout1/Layout 1*%EFIFlags *EFEngRotate180 Column|Command|Rerip|Spooler*%EFIGroup *EFEngRotate180 FPLayout/Layout*OpenUI *EFEngRotate180/Rotate 180:PickOne*OrderDependency: 50.0 AnySetup *EFEngRotate180*DefaultEFEngRotate180: False*EFEngRotate180 False/Off: " /XJXsetEngineRotate180 where { pop 0 XJXsetEngineRotate180 } if "*EFEngRotate180 True/On: " /XJXsetEngineRotate180 where { pop 1 XJXsetEngineRotate180 } if "*EFEngRotate180 LargePaperOnly/Large Paper Only: " /XJXsetEngineRotate180 where { pop 2 XJXsetEngineRotate180 } if "*CloseUI: *EFEngRotate180*CloseGroup: FPLayout1*%EFIFlags *EFConvPaperSize Setup*%EFIGroup *EFConvPaperSize FPLayout/Layout*OpenUIEFI *EFConvPaperSize/Convert Paper Sizes:PickOne*OrderDependency: 25.0 AnySetup *EFConvPaperSize*DefaultEFConvPaperSize: False*EFConvPaperSize False/No: ""*EFConvPaperSize LetterToA4/Letter/Tabloid->A4/A3: ""*EFConvPaperSize A4ToLetter/A4/A3->Letter/Tabloid: ""*CloseUIEFI: *EFConvPaperSize*OpenGroup: FPLayout1/Layout 1*%EFIFlags *EFRIPBooklet Booklet|ComboBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFRIPBooklet FPLayout/Layout*OpenUI *EFRIPBooklet/Booklet Type:PickOne*OrderDependency: 50.0 AnySetup *EFRIPBooklet*DefaultEFRIPBooklet: False*EFRIPBooklet False/None: "/XJXsetControllerBooklet where { pop (FALSE)XJXsetControllerBooklet } if "*End*EFRIPBooklet TwoUp/Saddle (left): "/XJXsetControllerBooklet where { pop (TWOUP)XJXsetControllerBooklet } if "*End*EFRIPBooklet TwoUpRight/Saddle (right): "/XJXsetControllerBooklet where { pop (TWOUPRIGHT)XJXsetControllerBooklet } if "*End*EFRIPBooklet TwoUpTop/Saddle (top): "/XJXsetControllerBooklet where { pop (TWOUPTOP)XJXsetControllerBooklet } if "*End*EFRIPBooklet NestSaddleL/Nested Saddle (left): "/XJXsetControllerBooklet where { pop (NESTSADDLEL)XJXsetControllerBooklet } if "*End*EFRIPBooklet NestSaddleR/Nested Saddle (right): "/XJXsetControllerBooklet where { pop (NESTSADDLER)XJXsetControllerBooklet } if "*End*EFRIPBooklet NestSaddleT/Nested Saddle (top): "/XJXsetControllerBooklet where { pop (NESTSADDLET)XJXsetControllerBooklet } if "*End*EFRIPBooklet Speed/Cut & stack: "/XJXsetControllerBooklet where { pop (SPEED)XJXsetControllerBooklet } if "*End*EFRIPBooklet Double/Step & repeat: "/XJXsetControllerBooklet where { pop (DOUBLE)XJXsetControllerBooklet } if "*End*CloseUI: *EFRIPBooklet*CloseGroup: FPLayout1*OpenGroup: FPLayout1/Layout 1*%EFIFlags *EFBookCoverEnabled Booklet|CheckBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookCoverEnabled FPLayout/Layout*OpenUI *EFBookCoverEnabled/Cover Enabled:Boolean*OrderDependency: 50.0 AnySetup *EFBookCoverEnabled*DefaultEFBookCoverEnabled: False*EFBookCoverEnabled False/No: ""*EFBookCoverEnabled True/Yes: ""*CloseUI: *EFBookCoverEnabled*CloseGroup: FPLayout1*OpenGroup: FPLayout2/Layout 2*%EFIFlags *EFBookFrCover Booklet|ComboBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookFrCover FPLayout/Layout*OpenUI *EFBookFrCover/Front Cover:PickOne*OrderDependency: 50.0 AnySetup *EFBookFrCover*DefaultEFBookFrCover: Side1*EFBookFrCover Side1/Print on outside: " /XJXsetfrontcover where { pop (Simplex) XJXsetfrontcover } if "*EFBookFrCover Side2/Print on inside: " /XJXsetfrontcover where { pop (Simplex2) XJXsetfrontcover } if "*EFBookFrCover Both/Print on both sides: " /XJXsetfrontcover where { pop (Duplex) XJXsetfrontcover } if "*EFBookFrCover Blank/Do not print: " /XJXsetfrontcover where { pop (Blank) XJXsetfrontcover } if "*CloseUI: *EFBookFrCover*CloseGroup: FPLayout2*OpenGroup: FPLayout2/Layout 2*%EFIFlags *EFBookBkCover Booklet|ComboBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookBkCover FPLayout/Layout*OpenUI *EFBookBkCover/Back Cover:PickOne*OrderDependency: 50.0 AnySetup *EFBookBkCover*DefaultEFBookBkCover: Side2*EFBookBkCover Side2/Print on outside: ""*EFBookBkCover Side1/Print on inside: ""*EFBookBkCover Both/Print on both sides: ""*EFBookBkCover Blank/Do not print: ""*CloseUI: *EFBookBkCover*CloseGroup: FPLayout2*%EFIFlags *EFBookCoverSize Booklet|ComboBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookCoverSize FPLayout/Layout*%EFIJobNote *EFBookCoverSize/Cover Size:31:*OpenGroup: FPLayout2/Layout 2*%EFIFlags *EFBookCoverInType Booklet|ComboBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookCoverInType FPLayout/Layout*OpenUI *EFBookCoverInType/Cover Input Type:PickOne*OrderDependency: 50.0 AnySetup *EFBookCoverInType*DefaultEFBookCoverInType: MultiPageNoSpine*EFBookCoverInType MultiPageNoSpine/Multi Page(No printing on spine): ""*CloseUI: *EFBookCoverInType*CloseGroup: FPLayout2*OpenGroup: FPLayout2/Layout 2*%EFIFlags *EFBookletCreep Booklet|Command|DriverUserDisplayHidden|RadioButton|Rerip|Spooler*%EFIGroup *EFBookletCreep FPLayout/Layout*OpenUI *EFBookletCreep/Creep Adjustment:PickOne*OrderDependency: 57.0 AnySetup *EFBookletCreep*DefaultEFBookletCreep: False*EFBookletCreep False/Off: " /XJXsetBookletCreep where { pop 0 XJXsetBookletCreep } if "*EFBookletCreep Plain/Plain: " /XJXsetBookletCreep where { pop 0.18 XJXsetBookletCreep } if "*EFBookletCreep Thick/Heavy: " /XJXsetBookletCreep where { pop 0.23 XJXsetBookletCreep } if "*CloseUI: *EFBookletCreep*CloseGroup: FPLayout2*OpenGroup: FPLayout2/Layout 2*%EFIFlags *EFBookletReduce Booklet|CheckBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookletReduce FPLayout/Layout*OpenUI *EFBookletReduce/Shrink to fit:Boolean*OrderDependency: 49.0 AnySetup *EFBookletReduce*DefaultEFBookletReduce: True*EFBookletReduce True/On: " /XJXsetbookletreduce where { pop true XJXsetbookletreduce } if "*EFBookletReduce False/Off: " /XJXsetbookletreduce where { pop false XJXsetbookletreduce } if "*CloseUI: *EFBookletReduce*CloseGroup: FPLayout2*OpenGroup: FPLayout3/Layout 3*%EFIFlags *EFBookAutoSpine Booklet|CheckBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookAutoSpine FPLayout/Layout*OpenUI *EFBookAutoSpine/Calculate Spine Automatically:Boolean*OrderDependency: 50.0 AnySetup *EFBookAutoSpine*DefaultEFBookAutoSpine: True*EFBookAutoSpine False/Off: ""*EFBookAutoSpine True/Automatic: ""*CloseUI: *EFBookAutoSpine*CloseGroup: FPLayout3*OpenGroup: FPLayout3/Layout 3*%EFIFlags *EFBookCoverTray Booklet|ComboBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookCoverTray FPLayout/Layout*OpenUI *EFBookCoverTray/Booklet Cover Source:PickOne*OrderDependency: 20.0 AnySetup *EFBookCoverTray*DefaultEFBookCoverTray: None*EFBookCoverTray None/Same as Job: " /XJXsetFirstPageTray where { pop 0 XJXsetFirstPageTray } if "*End*EFBookCoverTray AutoSelect/Auto Tray Select: " /XJXsetFirstPageTray where{ pop 7 XJXsetFirstPageTray } if "*End*EFBookCoverTray ManualFeed/Stack Bypass: " /XJXsetFirstPageTray where{ pop 2 XJXsetFirstPageTray } if "*End*EFBookCoverTray Tray1/Drawer1: " /XJXsetFirstPageTray where{ pop 1 XJXsetFirstPageTray } if "*End*EFBookCoverTray Tray2/Drawer2: " /XJXsetFirstPageTray where{ pop 4 XJXsetFirstPageTray } if "*End*EFBookCoverTray Tray3/Drawer3: " /XJXsetFirstPageTray where{ pop 5 XJXsetFirstPageTray } if "*End*EFBookCoverTray Tray4/Drawer4: " /XJXsetFirstPageTray where{ pop 20 XJXsetFirstPageTray } if "*End*EFBookCoverTray Tray5/Side Paper Deck: " /XJXsetFirstPageTray where{ pop 21 XJXsetFirstPageTray } if "*End*CloseUI: *EFBookCoverTray*CloseGroup: FPLayout3*%EFIFlags *EFBookSpineFloatPoints Booklet|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookSpineFloatPoints FPLayout/Layout*%EFIFloatRange *EFBookSpineFloatPoints/Spine Width:(0.0;85.039;0.1;0.0;1): " /XJXSetPrinterinfo where { pop (EFBookSpineFloatPoints) (<*EFBookSpineFloatPoints>) XJXSetPrinterinfo } if"*%EFIKeyAttribute [EFBookSpineFloatPoints][polymorphic:yes]*%EFIFlags *EFBookMarginFloatPoints Booklet|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookMarginFloatPoints FPLayout/Layout*%EFIFloatRange *EFBookMarginFloatPoints/Increase gutter by:(-141.8;141.8;0.1;0.0;1): " /XJXSetPrinterinfo where { pop (EFBookMarginFloatPoints) (<*EFBookMarginFloatPoints>) XJXSetPrinterinfo } if "*%EFIKeyAttribute [EFBookMarginFloatPoints][polymorphic:yes]*OpenGroup: FPLayout3/Layout 3*%EFIFlags *EFBookNumSheetPerSubset Booklet|ComboBox|Command|DriverUserDisplayHidden|Rerip|Spooler*%EFIGroup *EFBookNumSheetPerSubset FPLayout/Layout*OpenUI *EFBookNumSheetPerSubset/Number of sheets subset:PickOne*OrderDependency: 50.0 AnySetup *EFBookNumSheetPerSubset*DefaultEFBookNumSheetPerSubset: 1*EFBookNumSheetPerSubset 1/1: ""*EFBookNumSheetPerSubset 2/2: ""*EFBookNumSheetPerSubset 3/3: ""*EFBookNumSheetPerSubset 4/4: ""*EFBookNumSheetPerSubset 5/5: ""*EFBookNumSheetPerSubset 6/6: ""*EFBookNumSheetPerSubset 7/7: ""*EFBookNumSheetPerSubset 8/8: ""*EFBookNumSheetPerSubset 9/9: ""*EFBookNumSheetPerSubset 10/10: ""*EFBookNumSheetPerSubset 11/11: ""*EFBookNumSheetPerSubset 12/12: ""*EFBookNumSheetPerSubset 13/13: ""*EFBookNumSheetPerSubset 14/14: ""*EFBookNumSheetPerSubset 15/15: ""*EFBookNumSheetPerSubset 16/16: ""*EFBookNumSheetPerSubset 17/17: ""*EFBookNumSheetPerSubset 18/18: ""*EFBookNumSheetPerSubset 19/19: ""*EFBookNumSheetPerSubset 20/20: ""*CloseUI: *EFBookNumSheetPerSubset*CloseGroup: FPLayout3*OpenGroup: FPLayout3/Layout 3*%EFIFlags *EFBookCentering Booklet|Command|DriverUserDisplayHidden|Impose|RadioButton|Rerip|Spooler*%EFIGroup *EFBookCentering FPLayout/Layout*OpenUI *EFBookCentering/Centering Adjustment :PickOne*OrderDependency: 50.0 AnySetup *EFBookCentering*DefaultEFBookCentering: Bottom*EFBookCentering Bottom/At the spine: ""*EFBookCentering Middle/At the center: ""*CloseUI: *EFBookCentering*CloseGroup: FPLayout3*%EFIFlags *EFBookCoverEnabledMM Booklet|DriverUserDisplayHidden|MixedMedia|NoFieryDriverUI*%EFIGroup *EFBookCoverEnabledMM FPLayout/Layout*OpenUIEFI *EFBookCoverEnabledMM/Cover MixedMedia:PickOne*OrderDependency: 50.0 AnySetup *EFBookCoverEnabledMM*DefaultEFBookCoverEnabledMM: None*EFBookCoverEnabledMM None/None: ""*EFBookCoverEnabledMM False/No: "userdict /XJXEFIsetpageproperties known{ << /XJXSetPrinterinfo [ (ImposeCoverSet) (0) ] /XJXSetPrinterinfo [ (ImposeBodySet) (1) ]  >> XJXEFIsetpageproperties }{ /XJXSetPrinterinfo where { pop false XJXSetPrinterinfo } if } ifelse "*End*EFBookCoverEnabledMM True/Yes: "userdict /XJXEFIsetpageproperties known{ << /XJXSetPrinterinfo [ (ImposeCoverSet) (1) ] /XJXSetPrinterinfo [ (ImposeBodySet) (0) ]  >> XJXEFIsetpageproperties }{ /XJXSetPrinterinfo where { pop false XJXSetPrinterinfo } if } ifelse "*End*CloseUIEFI: *EFBookCoverEnabledMM*OpenGroup: FPLayout3/Layout 3*%EFIFlags *EFNUpBoundingBox Booklet|CheckBox|Rerip|Spooler*%EFIGroup *EFNUpBoundingBox FPLayout/Layout*OpenUI *EFNUpBoundingBox/Print Page Border:Boolean*OrderDependency: 50.0 AnySetup *EFNUpBoundingBox*DefaultEFNUpBoundingBox: False*EFNUpBoundingBox False/Off: ""*EFNUpBoundingBox True/On: ""*CloseUI: *EFNUpBoundingBox*CloseGroup: FPLayout3*OpenGroup: FPLayout4/Layout 4*%EFIFlags *EFNUpOption Booklet|ComboBox|Command|Rerip|Spooler*%EFIGroup *EFNUpOption FPLayout/Layout*OpenUI *EFNUpOption/N-Up Options:PickOne*OrderDependency: 55.0 AnySetup *EFNUpOption*DefaultEFNUpOption: 1UP*EFNUpOption 1UP/1 up: " /XJXSetPrinterinfo where { pop (EFNUpOption) (1UP) XJXSetPrinterinfo } if "*EFNUpOption 2ULH/2 up Left Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (2ULH) XJXSetPrinterinfo } if "*EFNUpOption 2URV/2 up Right Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (2URV) XJXSetPrinterinfo } if "*EFNUpOption 4ULH/4 up Left Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (4ULH) XJXSetPrinterinfo } if "*EFNUpOption 4ULV/4 up Left Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (4ULV) XJXSetPrinterinfo } if "*EFNUpOption 4URH/4 up Right Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (4URH) XJXSetPrinterinfo } if "*EFNUpOption 4URV/4 up Right Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (4URV) XJXSetPrinterinfo } if "*EFNUpOption 6ULH/6 up Left Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (6ULH) XJXSetPrinterinfo } if "*EFNUpOption 6ULV/6 up Left Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (6ULV) XJXSetPrinterinfo } if "*EFNUpOption 6URH/6 up Right Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (6URH) XJXSetPrinterinfo } if "*EFNUpOption 6URV/6 up Right Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (6URV) XJXSetPrinterinfo } if "*EFNUpOption 9ULH/9 up Left Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (9ULH) XJXSetPrinterinfo } if "*EFNUpOption 9ULV/9 up Left Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (9ULV) XJXSetPrinterinfo } if "*EFNUpOption 9URH/9 up Right Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (9URH) XJXSetPrinterinfo } if "*EFNUpOption 9URV/9 up Right Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (9URV) XJXSetPrinterinfo } if "*EFNUpOption 16ULH/16 up Left Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (16ULH) XJXSetPrinterinfo } if "*EFNUpOption 16ULV/16 up Left Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (16ULV) XJXSetPrinterinfo } if "*EFNUpOption 16URH/16 up Right Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (16URH) XJXSetPrinterinfo } if "*EFNUpOption 16URV/16 up Right Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (16URV) XJXSetPrinterinfo } if "*EFNUpOption 2ULV/2 up Left Vertical: " /XJXSetPrinterinfo where { pop (EFNUpOption) (2ULV) XJXSetPrinterinfo } if "*EFNUpOption 2URH/2 up Right Horizontal: " /XJXSetPrinterinfo where { pop (EFNUpOption) (2URH) XJXSetPrinterinfo } if "*CloseUI: *EFNUpOption*CloseGroup: FPLayout4*OpenGroup: FPColorWise1/Color 1*%EFIFlags *EFColorMode Column|Command|Impose|Rerip|Spooler*%EFIGroup *EFColorMode FPColorWise/Color*OpenUI *EFColorMode/Color Mode:PickOne*OrderDependency: 12.0 AnySetup *EFColorMode*DefaultEFColorMode: EFColorModeDEF*EFColorMode EFColorModeDEF/Printer's default: ""*EFColorMode CMYK/CMYK: " userdict /XJXsetcolormode known{ (CMYK) XJXsetcolormode} if "*End*EFColorMode Grayscale/Grayscale: " userdict /XJXsetcolormode known{ (Grayscale) XJXsetcolormode} if "*End*?EFColorMode: " currentpagedevice /ProcessColorModel known{currentpagedevice /ProcessColorModel get == } if "*End*CloseUI: *EFColorMode*CloseGroup: FPColorWise1*OpenGroup: FPColorWise1/Color 1*%EFIFlags *EFRGBOverride ColorSetup|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFRGBOverride FPColorWise/Color*OpenUI *EFRGBOverride/RGB Source Profile:PickOne*OrderDependency: 56.0 AnySetup *EFRGBOverride*DefaultEFRGBOverride: EFRGBOverrideDEF*EFRGBOverride EFRGBOverrideDEF/Printer's default: " "*EFRGBOverride APPLE13/Apple Standard: "  /XJXsetRGBOverride where { pop (APPLE13) XJXsetRGBOverride } if "*End*EFRGBOverride SRGB/sRGB (PC): " /XJXsetRGBOverride where{ pop (SRGB) XJXsetRGBOverride } if "*End*EFRGBOverride ADOBERGB/Adobe RGB (1998): " /XJXsetRGBOverride where{ pop (ADOBERGB) XJXsetRGBOverride } if "*End*EFRGBOverride ECIRGB/ECI-RGB: " /XJXsetRGBOverride where{ pop (ECIRGB) XJXsetRGBOverride } if "*End*EFRGBOverride FIERYRGB/Fiery RGB: " /XJXsetRGBOverride where                { pop (FIERYRGB) XJXsetRGBOverride } if "*End*EFRGBOverride EFIRGB/EFIRGB: " /XJXsetRGBOverride where{ pop (EFIRGB) XJXsetRGBOverride } if "*End*EFRGBOverride RGB1/Source-1: " /XJXsetRGBOverride where{ pop (RGB1) XJXsetRGBOverride } if "*End*EFRGBOverride RGB2/Source-2: " /XJXsetRGBOverride where{ pop (RGB2) XJXsetRGBOverride } if "*End*EFRGBOverride RGB3/Source-3: " /XJXsetRGBOverride where{ pop (RGB3) XJXsetRGBOverride } if "*End*EFRGBOverride RGB4/Source-4: " /XJXsetRGBOverride where{ pop (RGB4) XJXsetRGBOverride } if "*End*EFRGBOverride RGB5/Source-5: " /XJXsetRGBOverride where{ pop (RGB5) XJXsetRGBOverride } if "*End*EFRGBOverride RGB6/Source-6: " /XJXsetRGBOverride where{ pop (RGB6) XJXsetRGBOverride } if "*End*EFRGBOverride RGB7/Source-7: " /XJXsetRGBOverride where{ pop (RGB7) XJXsetRGBOverride } if "*End*EFRGBOverride RGB8/Source-8: " /XJXsetRGBOverride where{ pop (RGB8) XJXsetRGBOverride } if "*End*EFRGBOverride RGB9/Source-9: " /XJXsetRGBOverride where{ pop (RGB9) XJXsetRGBOverride } if "*End*EFRGBOverride RGB10/Source-10: " /XJXsetRGBOverride where{ pop (RGB10) XJXsetRGBOverride } if "*End*EFRGBOverride NONE/None: " /XJXsetRGBOverride where{ pop (Off) XJXsetRGBOverride } if  "*End*CloseUI: *EFRGBOverride*CloseGroup: FPColorWise1*OpenGroup: FPColorWise1/Color 1*%EFIFlags *EFColorRendDict ColorSetup|Column|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFColorRendDict FPColorWise/Color*OpenUI *EFColorRendDict/Rendering Style:PickOne*OrderDependency: 54.0 AnySetup *EFColorRendDict*DefaultEFColorRendDict: EFColorRendDictDEF*EFColorRendDict EFColorRendDictDEF/Printer's default: " "*EFColorRendDict PHOTOGRAPHIC/Photographic: " userdict /XJXsetrenderingintent known { (Photographic) XJXsetrenderingintent } if "*End*EFColorRendDict PRESENTATION/Presentation: " userdict /XJXsetrenderingintent known { (Presentation) XJXsetrenderingintent } if "*End*EFColorRendDict RELATIVE/Relative Colorimetric: " userdict /XJXsetrenderingintent known { (Relative) XJXsetrenderingintent } if "*End*EFColorRendDict ABSOLUTE/Absolute Colorimetric: " userdict /XJXsetrenderingintent known { (Absolute) XJXsetrenderingintent } if "*End*?EFColorRendDict: " FieryXJdict /CB_GetRenderingIntent known   { FieryXJdict /CB_GetRenderingIntent get exec == } if "*End*CloseUI: *EFColorRendDict*CloseGroup: FPColorWise1*OpenGroup: FPColorWise1/Color 1*%EFIFlags *EFRGBSep Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFRGBSep FPColorWise/Color*OpenUI *EFRGBSep/RGB Separation:PickOne*OrderDependency: 56.5 AnySetup *EFRGBSep*DefaultEFRGBSep: EFRGBSepDEF*EFRGBSep EFRGBSepDEF/Printer's default: " "*EFRGBSep SEPOUT/Output: " /XJXsetRGBSeparation where{ pop (False) XJXsetRGBSeparation } if "*EFRGBSep SEPSIM/Simulation: " /XJXsetRGBSeparation where{ pop (True) XJXsetRGBSeparation } if "*CloseUI: *EFRGBSep*CloseGroup: FPColorWise1*OpenGroup: FPColorWise1/Color 1*%EFIFlags *EFSimulation ColorSetup|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFSimulation FPColorWise/Color*OpenUI *EFSimulation/CMYK Simulation Profile:PickOne*OrderDependency: 57.0 AnySetup *EFSimulation*DefaultEFSimulation: EFSimulationDEF*EFSimulation EFSimulationDEF/Printer's default: " "*EFSimulation DIC/DIC(EFI): " /XJXsetSimulation where{ pop (DIC) XJXsetSimulation } if "*End*EFSimulation EUROSCALE/Euroscale(EFI): " /XJXsetSimulation where{ pop (Euroscale) XJXsetSimulation } if "*End*EFSimulation ISOCOATED/ISO Coated: " /XJXsetSimulation where{ pop (ISOCoated) XJXsetSimulation } if "*End*EFSimulation ISOUNCOATED/ISO Uncoated: " /XJXsetSimulation where{ pop (ISOUncoated) XJXsetSimulation } if "*End*EFSimulation JMPA/JMPA ver.2(EFI): " /XJXsetSimulation where{ pop (JMPA) XJXsetSimulation } if "*End*EFSimulation JCOLOR/Japan Color 2001 type1(EFI): " /XJXsetSimulation where{ pop (JCOLOR) XJXsetSimulation } if "*End*EFSimulation SWOPCOATED/SWOP-Coated(EFI): " /XJXsetSimulation where{ pop (SWOP-Coated) XJXsetSimulation } if "*End*EFSimulation TOYOCOATED/TOYO Offset Coated 2.0: " /XJXsetSimulation where{ pop (TOYOCOATED) XJXsetSimulation } if "*End*EFSimulation CUSTOM1/Simulation-1: " /XJXsetSimulation where{ pop (Custom-1) XJXsetSimulation } if "*End*EFSimulation CUSTOM2/Simulation-2: " /XJXsetSimulation where{ pop (Custom-2) XJXsetSimulation } if "*End*EFSimulation CUSTOM3/Simulation-3: " /XJXsetSimulation where{ pop (Custom-3) XJXsetSimulation } if "*End*EFSimulation CUSTOM4/Simulation-4: " /XJXsetSimulation where{ pop (Custom-4) XJXsetSimulation } if "*End*EFSimulation CUSTOM5/Simulation-5: " /XJXsetSimulation where{ pop (Custom-5) XJXsetSimulation } if "*End*EFSimulation CUSTOM6/Simulation-6: " /XJXsetSimulation where{ pop (Custom-6) XJXsetSimulation } if "*End*EFSimulation CUSTOM7/Simulation-7: " /XJXsetSimulation where{ pop (Custom-7) XJXsetSimulation } if "*End*EFSimulation CUSTOM8/Simulation-8: " /XJXsetSimulation where{ pop (Custom-8) XJXsetSimulation } if "*End*EFSimulation CUSTOM9/Simulation-9: " /XJXsetSimulation where{ pop (Custom-9) XJXsetSimulation } if "*End*EFSimulation CUSTOM10/Simulation-10: " /XJXsetSimulation where{ pop (Custom-10) XJXsetSimulation } if "*End*EFSimulation NONE/None: "  /XJXsetSimulation where{ pop (.None) XJXsetSimulation } if "*End*EFSimulation MATCHCOPY/ColorWise OFF: " /XJXsetSimulation where{ pop (.MatchCopy) XJXsetSimulation } if "*End*CloseUI: *EFSimulation*CloseGroup: FPColorWise1*OpenGroup: FPColorWise2/Color 2*%EFIFlags *EFSimSpeed ColorSetup|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFSimSpeed FPColorWise/Color*OpenUI *EFSimSpeed/CMYK Simulation Method:PickOne*OrderDependency: 58.0 AnySetup *EFSimSpeed*DefaultEFSimSpeed: EFSimSpeedDEF*EFSimSpeed EFSimSpeedDEF/Printer's default: " "*EFSimSpeed FAST/Quick: " /XJXsetSimSpeed where{ pop (Quick) XJXsetSimSpeed } if "*End*EFSimSpeed BETR/Full (Source GCR): " /XJXsetSimSpeed where{ pop (Full) XJXsetSimSpeed } if  "*End*EFSimSpeed S4X4/Full (Output GCR): " /XJXsetSimSpeed where{ pop (4x4) XJXsetSimSpeed } if  "*End*CloseUI: *EFSimSpeed*CloseGroup: FPColorWise2*OpenGroup: FPColorWise2/Color 2*%EFIFlags *EFOutProfile ColorSetup|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFOutProfile FPColorWise/Color*OpenUI *EFOutProfile/Output Profile:PickOne*OrderDependency: 58.5 AnySetup *EFOutProfile*DefaultEFOutProfile: EFOutProfileDEF*EFOutProfile EFOutProfileDEF/Printer's default: " /XJXsetOutputProfile where{ pop (DEFAULT) XJXsetOutputProfile } if "*EFOutProfile DEFAULT_MEDIA/Use Media Defined Profile: " /XJXsetOutputProfile where{ pop (DEFAULT_MEDIA) XJXsetOutputProfile } if "*EFOutProfile OUT1/Output-1: " /XJXsetOutputProfile where{ pop (OUT1) XJXsetOutputProfile } if "*EFOutProfile OUT2/Output-2: " /XJXsetOutputProfile where{ pop (OUT2) XJXsetOutputProfile } if "*EFOutProfile OUT3/Output-3: " /XJXsetOutputProfile where{ pop (OUT3) XJXsetOutputProfile } if "*EFOutProfile OUT4/Output-4: " /XJXsetOutputProfile where{ pop (OUT4) XJXsetOutputProfile } if "*EFOutProfile OUT5/Output-5: " /XJXsetOutputProfile where{ pop (OUT5) XJXsetOutputProfile } if "*EFOutProfile OUT6/Output-6: " /XJXsetOutputProfile where{ pop (OUT6) XJXsetOutputProfile } if "*EFOutProfile OUT7/Output-7: " /XJXsetOutputProfile where{ pop (OUT7) XJXsetOutputProfile } if "*EFOutProfile OUT8/Output-8: " /XJXsetOutputProfile where{ pop (OUT8) XJXsetOutputProfile } if "*EFOutProfile OUT9/Output-9: " /XJXsetOutputProfile where{ pop (OUT9) XJXsetOutputProfile } if "*EFOutProfile OUT10/Output-10: " /XJXsetOutputProfile where{ pop (OUT10) XJXsetOutputProfile } if "*CloseUI: *EFOutProfile*CloseGroup: FPColorWise2*OpenGroup: FPColorWise2/Color 2*%EFIFlags *EFSpotColors ColorSetup|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFSpotColors FPColorWise/Color*OpenUI *EFSpotColors/Spot Color Matching:PickOne*OrderDependency: 61.0 AnySetup *EFSpotColors*DefaultEFSpotColors: EFSpotColorsDEF*EFSpotColors EFSpotColorsDEF/Printer's default: " "*EFSpotColors OFF/Off: " /XJXsetSpotColors where{ pop (False) XJXsetSpotColors } if "*EFSpotColors ON/On: " /XJXsetSpotColors where{ pop (True) XJXsetSpotColors } if "*CloseUI: *EFSpotColors*CloseGroup: FPColorWise2*OpenGroup: FPColorWise2/Color 2*%EFIFlags *EFPureBlack ColorSetup|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFPureBlack FPColorWise/Color*OpenUI *EFPureBlack/Black Text/Graphics:PickOne*OrderDependency: 59.0 AnySetup *EFPureBlack*DefaultEFPureBlack: EFPureBlackDEF*EFPureBlack EFPureBlackDEF/Printer's default: ""*EFPureBlack BLACKPUREON/Pure Black On: " userdict /XJXsetBlackControl known { 1 XJXsetBlackControl } if"*EFPureBlack BLACKRICHON/Rich Black On: " userdict /XJXsetBlackControl known {  3 XJXsetBlackControl } if"*EFPureBlack BLACKNORMAL/Normal: " userdict /XJXsetBlackControl known { 0 XJXsetBlackControl } if"*CloseUI: *EFPureBlack*CloseGroup: FPColorWise2*OpenGroup: FPColorWise2/Color 2*%EFIFlags *EFBlkOvpCtrl ColorSetup|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFBlkOvpCtrl FPColorWise/Color*OpenUI *EFBlkOvpCtrl/Black Overprint:PickOne*OrderDependency: 60.0 AnySetup *EFBlkOvpCtrl*DefaultEFBlkOvpCtrl: EFBlkOvpCtrlDEF*EFBlkOvpCtrl EFBlkOvpCtrlDEF/Printer's default: " "*EFBlkOvpCtrl OFF/Off: " /XJXsetBlkOverprint where{ pop (False) XJXsetBlkOverprint } if "*EFBlkOvpCtrl TEXTONLY/Text: " /XJXsetBlkOverprint where { pop (True) XJXsetBlkOverprint } if/XJXSetBlkGraphicsOVP where { pop false XJXSetBlkGraphicsOVP } if "*End*EFBlkOvpCtrl TEXTGRAPHICS/Text/Graphics: " /XJXsetBlkOverprint where { pop (True) XJXsetBlkOverprint } if/XJXSetBlkGraphicsOVP where { pop true XJXSetBlkGraphicsOVP } if "*End*CloseUI: *EFBlkOvpCtrl*CloseGroup: FPColorWise2*OpenGroup: FPColorWise3/Color 3*%EFIFlags *EFCompOverprint Command|Impose|Rerip|Spooler*%EFIGroup *EFCompOverprint FPColorWise/Color*OpenUI *EFCompOverprint/Composite Overprint:Boolean*OrderDependency: 50.0 AnySetup *EFCompOverprint*DefaultEFCompOverprint: False*EFCompOverprint False/Off: " /XJXsetCompositeOverprint where { pop false XJXsetCompositeOverprint } if "*EFCompOverprint True/On: " /XJXsetCompositeOverprint where { pop true XJXsetCompositeOverprint} if "*End*CloseUI: *EFCompOverprint*CloseGroup: FPColorWise3*OpenGroup: FPColorWise3/Color 3*%EFIFlags *EFKOnlyGrayCMYK ColorSetup|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFKOnlyGrayCMYK FPColorWise/Color*OpenUI *EFKOnlyGrayCMYK/Print gray using black only (CMYK):PickOne*OrderDependency: 50.0 AnySetup *EFKOnlyGrayCMYK*DefaultEFKOnlyGrayCMYK: EFKOnlyGrayCMYKDEF*EFKOnlyGrayCMYK EFKOnlyGrayCMYKDEF/Printer's default: ""*EFKOnlyGrayCMYK OFF/Off: " /XJXsetBlackOnlyGrayCMYK where { pop (OFF) XJXsetBlackOnlyGrayCMYK } if "*EFKOnlyGrayCMYK TEXTGRAPHICS/Text/Graphics: " /XJXsetBlackOnlyGrayCMYK where { pop (TEXTGRAPHICS) XJXsetBlackOnlyGrayCMYK } if "*EFKOnlyGrayCMYK TEXTGRAPHICSIMAG/Text/Graphics/Image: " /XJXsetBlackOnlyGrayCMYK where { pop (TEXTGRAPHICSIMAG) XJXsetBlackOnlyGrayCMYK } if "*CloseUI: *EFKOnlyGrayCMYK*CloseGroup: FPColorWise3*OpenGroup: FPColorWise3/Color 3*%EFIFlags *EFKOnlyGrayRGB ColorSetup|Command|Dynamic|Impose|Rerip|Spooler*%EFIGroup *EFKOnlyGrayRGB FPColorWise/Color*OpenUI *EFKOnlyGrayRGB/Print gray using black only (RGB):PickOne*OrderDependency: 50.0 AnySetup *EFKOnlyGrayRGB*DefaultEFKOnlyGrayRGB: EFKOnlyGrayRGBDEF*EFKOnlyGrayRGB EFKOnlyGrayRGBDEF/Printer's default: ""*EFKOnlyGrayRGB OFF/Off: " /XJXsetBlackOnlyGrayRGB where { pop (OFF) XJXsetBlackOnlyGrayRGB } if "*EFKOnlyGrayRGB TEXTGRAPHICS/Text/Graphics: " /XJXsetBlackOnlyGrayRGB where { pop (TEXTGRAPHICS) XJXsetBlackOnlyGrayRGB } if "*EFKOnlyGrayRGB TEXTGRAPHICSIMAG/Text/Graphics/Image: " /XJXsetBlackOnlyGrayRGB where { pop (TEXTGRAPHICSIMAG) XJXsetBlackOnlyGrayRGB } if "*CloseUI: *EFKOnlyGrayRGB*CloseGroup: FPColorWise3*OpenGroup: FPColorWise3/Color 3*%EFIFlags *EFSubstColors Command|Impose|Rerip|Spooler*%EFIGroup *EFSubstColors FPColorWise/Color*OpenUI *EFSubstColors/Substitute Colors:Boolean*OrderDependency: 61.1 AnySetup *EFSubstColors*DefaultEFSubstColors: False*EFSubstColors False/Off: " userdict /XJXsubstColors known { false XJXsubstColors } if "*EFSubstColors True/On: " userdict /XJXsubstColors known { true XJXsubstColors } if "*CloseUI: *EFSubstColors*CloseGroup: FPColorWise3*OpenGroup: FPColorWise3/Color 3*%EFIFlags *EFTrapping Command|Impose|Rerip|Setup|Spooler*%EFIGroup *EFTrapping FPColorWise/Color*OpenUI *EFTrapping/Auto Trapping:PickOne*OrderDependency: 58.4 AnySetup *EFTrapping*DefaultEFTrapping: EFTrappingDEF*EFTrapping EFTrappingDEF/Printer's default: ""*EFTrapping False/Off: " userdict /XJXDoACSTrapping known { false XJXDoACSTrapping } if "*EFTrapping True/On: " userdict /XJXDoACSTrapping known { true XJXDoACSTrapping } if "*CloseUI: *EFTrapping*CloseGroup: FPColorWise3*OpenGroup: FPColorWise4/Color 4*%EFIFlags *EFSeparations Column|Command|Impose|Rerip|Spooler*%EFIGroup *EFSeparations FPColorWise/Color*OpenUI *EFSeparations/Combine Separations:Boolean*OrderDependency: 40.0 Prolog *EFSeparations*DefaultEFSeparations: False*EFSeparations False/Off: " userdict /XJXsetSeparations known  { 0 XJXsetSeparations } if "*End*EFSeparations True/On: " userdict /XJXsetSeparations known  { 1 XJXsetSeparations } if "*End*CloseUI: *EFSeparations*CloseGroup: FPColorWise4*OpenGroup: FPImage1/Image 1*%EFIFlags *EFCopierMode Column|Command|Impose|Spooler*%EFIGroup *EFCopierMode FPImage/Image*OpenUI *EFCopierMode/Halftone:PickOne*OrderDependency: 40.0 AnySetup *EFCopierMode*DefaultEFCopierMode: EFCopierModeDEF*EFCopierMode EFCopierModeDEF/Printer's default: " "*EFCopierMode Standard/Standard: " userdict /XJXsetmapmode known{ 30 XJXsetmapmode } if "*End*EFCopierMode Resolution/Resolution: " userdict /XJXsetmapmode known{ 31 XJXsetmapmode } if "*End*EFCopierMode ErrorDiffusion/Error Diffusion: " userdict /XJXsetmapmode known{12 XJXsetmapmode } if "*End*EFCopierMode Gradation/Gradation: " userdict /XJXsetmapmode known{ 32 XJXsetmapmode } if "*End*EFCopierMode Pattern1/Pattern 1: " userdict /XJXsetmapmode known{ 33 XJXsetmapmode } if "*End*EFCopierMode Pattern2/Pattern 2: " userdict /XJXsetmapmode known{ 34 XJXsetmapmode } if "*End*EFCopierMode Pattern3/Pattern 3: " userdict /XJXsetmapmode known{ 35 XJXsetmapmode } if "*End*EFCopierMode Pattern4/Pattern 4: " userdict /XJXsetmapmode known{ 36 XJXsetmapmode } if "*End*EFCopierMode Pattern5/Pattern 5: " userdict /XJXsetmapmode known{ 37 XJXsetmapmode } if "*End*EFCopierMode Pattern6/Pattern 6: " userdict /XJXsetmapmode known{ 38 XJXsetmapmode } if "*End*EFCopierMode Pattern7/Pattern 7: " userdict /XJXsetmapmode known{ 39 XJXsetmapmode } if "*End*CloseUI: *EFCopierMode*CloseGroup: FPImage1*OpenGroup: FPImage1/Image 1*%EFIFlags *EFColorLineCtrl Column|Command|Impose|Rerip|Setup|Spooler*%EFIGroup *EFColorLineCtrl FPImage/Image*OpenUI *EFColorLineCtrl/Color Graphics/Line Control:PickOne*OrderDependency: 50.0 AnySetup *EFColorLineCtrl*DefaultEFColorLineCtrl: EFColorLineCtrlDEF*EFColorLineCtrl EFColorLineCtrlDEF/Printer's default: ""*EFColorLineCtrl Off/Prioritize Resolution: " userdict /XJXSetTonerReductionGraphicsAsText known   {  (ON) XJXSetTonerReductionGraphicsAsText } if "*End*EFColorLineCtrl On/Prioritize Color: " userdict /XJXSetTonerReductionGraphicsAsText known   { (OFF)  XJXSetTonerReductionGraphicsAsText} if "*End*CloseUI: *EFColorLineCtrl*CloseGroup: FPImage1*OpenGroup: FPImage1/Image 1*%EFIFlags *EFImageSmooth Command|Impose|Rerip|Spooler*%EFIGroup *EFImageSmooth FPImage/Image*OpenUI *EFImageSmooth/Image Smoothing:Boolean*OrderDependency: 62.0 AnySetup *EFImageSmooth*DefaultEFImageSmooth: False*EFImageSmooth False/Off: "  userdict /XJXSetImageSmooth known   { 0 XJXSetImageSmooth } if "*End*EFImageSmooth True/On: " userdict /XJXSetImageSmooth known   { 2 XJXSetImageSmooth } if "*End*CloseUI: *EFImageSmooth*CloseGroup: FPImage1*OpenGroup: FPImage1/Image 1*%EFIFlags *EFBrightness Command|Impose|Rerip|Spooler*%EFIGroup *EFBrightness FPImage/Image*OpenUI *EFBrightness/Brightness:PickOne*OrderDependency: 55.0 AnySetup *EFBrightness*DefaultEFBrightness: 00.00*EFBrightness +0.24/85%  Lightest: " /XJXsetBrightness where  { pop (LIGHTEST) XJXsetBrightness } if "*End*EFBrightness +0.16/90%  Lighter: " /XJXsetBrightness where  { pop (LIGHTER) XJXsetBrightness } if "*End*EFBrightness +0.08/95%  Light: " /XJXsetBrightness where  { pop (LIGHT) XJXsetBrightness } if "*End*EFBrightness 00.00/100% Normal: " /XJXsetBrightness where  { pop (NORMAL) XJXsetBrightness } if "*End*EFBrightness -0.08/105% Dark: " /XJXsetBrightness where  { pop (DARK) XJXsetBrightness } if "*End*EFBrightness -0.16/110% Darker: " /XJXsetBrightness where  { pop (DARKER) XJXsetBrightness } if "*End*EFBrightness -0.24/115% Darkest: " /XJXsetBrightness where  { pop (DARKEST) XJXsetBrightness } if "*End*CloseUI: *EFBrightness*CloseGroup: FPImage1*OpenGroup: FPImage1/Image 1*%EFIFlags *EFAdvSmooth Column|Command|Impose|Rerip|Spooler*%EFIGroup *EFAdvSmooth FPImage/Image*OpenUI *EFAdvSmooth/Advanced Smoothing:PickOne*OrderDependency: 50.0 AnySetup *EFAdvSmooth*DefaultEFAdvSmooth: EFAdvSmoothDEF*EFAdvSmooth EFAdvSmoothDEF/Printer's default: ""*EFAdvSmooth Smooth1/Smooth1: " userdict /XJXsetEngAdvSmooth known { (Smooth1) XJXsetEngAdvSmooth } if "*EFAdvSmooth Smooth2/Smooth2: " userdict /XJXsetEngAdvSmooth known { (Smooth2) XJXsetEngAdvSmooth } if "*EFAdvSmooth Off/Off: " userdict /XJXsetEngAdvSmooth known { (Off) XJXsetEngAdvSmooth } if "*?EFAdvSmooth: " userdict /XJXGetEngAdvSmooth  known {   userdict /XJXGetEngAdvSmooth get exec   dup 7 eq { 7 {pop} repeat } { 1 ne { (Unknown) } if } ifelse } { (Unknown) } ifelse= flush "*End*CloseUI: *EFAdvSmooth*CloseGroup: FPImage1*OpenGroup: FPImage2/Image 2*%EFIFlags *EFDensFineAdj Column|Command|Impose*%EFIGroup *EFDensFineAdj FPImage/Image*OpenUI *EFDensFineAdj/Density Fine Adjustment:PickOne*OrderDependency: 50.0 AnySetup *EFDensFineAdj*DefaultEFDensFineAdj: EFDensFineAdjDEF*EFDensFineAdj EFDensFineAdjDEF/Printer's default: ""*EFDensFineAdj Lighter/Lighter: " userdict /XJXsetEngDensFineAdj known { (Lighter) XJXsetEngDensFineAdj } if "*EFDensFineAdj Light/Light: " userdict /XJXsetEngDensFineAdj known { (Light) XJXsetEngDensFineAdj } if "*EFDensFineAdj Normal/Normal: " userdict /XJXsetEngDensFineAdj known { (Normal) XJXsetEngDensFineAdj } if "*EFDensFineAdj Dark/Dark: " userdict /XJXsetEngDensFineAdj known { (Dark) XJXsetEngDensFineAdj } if "*EFDensFineAdj Darker/Darker: " userdict /XJXsetEngDensFineAdj known { (Darker) XJXsetEngDensFineAdj } if "*?EFDensFineAdj: " userdict /XJXGetEngDensFineAj known {   userdict /XJXGetEngDensFineAj get exec   dup 7 eq { 7 {pop} repeat } { 1 ne { (Unknown) } if } ifelse } { (Unknown) } ifelse= flush "*End*CloseUI: *EFDensFineAdj*CloseGroup: FPImage2*OpenGroup: FPImage2/Image 2*%EFIFlags *EFNoiseSource Column|Command|Impose|Rerip|Spooler*%EFIGroup *EFNoiseSource FPImage/Image*OpenUI *EFNoiseSource/Gradation Smoothing:PickOne*OrderDependency: 70.0 AnySetup *EFNoiseSource*DefaultEFNoiseSource: EFNoiseSourceDEF*EFNoiseSource EFNoiseSourceDEF/Printer's default: ""*EFNoiseSource False/Off: " userdict /XJXsetNoiseSource known  { 0 XJXsetNoiseSource } if "*End*EFNoiseSource Adjustment-1/Fine: " userdict /XJXsetNoiseSource known{ 2 XJXsetNoiseSource } if "*End*EFNoiseSource Adjustment-2/Coarse: " userdict /XJXsetNoiseSource known{ 1 XJXsetNoiseSource } if "*End*CloseUI: *EFNoiseSource*CloseGroup: FPImage2*OpenGroup: FPImage2/Image 2*%EFIFlags *EFTonerSave Column|Command|Impose|Spooler*%EFIGroup *EFTonerSave FPImage/Image*OpenUI *EFTonerSave/Toner Saving:PickOne*OrderDependency: 50.0 AnySetup *EFTonerSave*DefaultEFTonerSave: EFTonerSaveDEF*EFTonerSave EFTonerSaveDEF/Printer's default: " "*EFTonerSave False/Off: " /XJXsetTonerSave where { pop 0 XJXsetTonerSave } if "*EFTonerSave Level1/On: " /XJXsetTonerSave where { pop 1 XJXsetTonerSave } if "*CloseUI: *EFTonerSave*CloseGroup: FPImage2*OpenGroup: FPImage2/Image 2*%EFIFlags *EFCompRatio Column|Command|Impose|Spooler*%EFIGroup *EFCompRatio FPImage/Image*OpenUI *EFCompRatio/Image Compression:PickOne*OrderDependency: 50.0 AnySetup *EFCompRatio*DefaultEFCompRatio: EFCompRatioDEF*EFCompRatio EFCompRatioDEF/Printer's default: ""*EFCompRatio Quality/Image Priority: " userdict /XJXsetEngCompressionRatio known { (Quality) XJXsetEngCompressionRatio } if "*EFCompRatio Standard/Normal: " userdict /XJXsetEngCompressionRatio known { (Standard) XJXsetEngCompressionRatio } if "*EFCompRatio Performance/Speed Priority: " userdict /XJXsetEngCompressionRatio known { (Performance) XJXsetEngCompressionRatio } if "*CloseUI: *EFCompRatio*CloseGroup: FPImage2*OpenGroup: FPImage2/Image 2*%EFIFlags *EFResolution Command|Impose|Rerip|Setup|Spooler*%EFIGroup *EFResolution FPImage/Image*OpenUI *EFResolution/Resolution:PickOne*OrderDependency: 12.0 AnySetup *EFResolution*DefaultEFResolution: EFResolutionDEF*EFResolution EFResolutionDEF/Printer's default: ""*EFResolution 600x600dpi/600dpi: " /XJXsetresolution where { pop ([600 600]) XJXsetresolution } if "*EFResolution 1200x1200dpi/1200dpi: " /XJXsetresolution where { pop ([1200 1200]) XJXsetresolution } if "*?EFResolution: "save    initgraphics    0 0 moveto currentpoint matrix defaultmatrix transform  0 72 lineto currentpoint matrix defaultmatrix transform  3 -1 roll sub dup mul  3 1 roll exch sub dup mul  add sqrt round cvi  10 string cvs print (dpi) = flushrestore "*End*CloseUI: *EFResolution*CloseGroup: FPImage2*OpenGroup: FPFinishing1/Finishing 1*%EFIFlags *EFOutputOrder Column|Command|EFIRaster|Impose|RadioButton|Rerip|Spooler*%EFIGroup *EFOutputOrder FPFinishing/Finishing*OpenUI *EFOutputOrder/Output Order:PickOne*OrderDependency: 12.0 AnySetup *EFOutputOrder*DefaultEFOutputOrder: Forward*EFOutputOrder Forward/Forward: " userdict /XJXsetprintorder known { 0 XJXsetprintorder } if "*EFOutputOrder Reverse/Reverse: " userdict /XJXsetprintorder known { 1 XJXsetprintorder } if "*CloseUI: *EFOutputOrder*CloseGroup: FPFinishing1*%EFIFlags *EFGutter Column|Command*%EFIGroup *EFGutter FPFinishing/Finishing*%EFIRange *EFGutter/Gutter(1=0.1 inch):(0;20;1;0): "/XJXsetGutter where { pop <*EFGutter> XJXsetGutter } if"*%EFIKeyAttribute [EFGutter][polymorphic:yes]*%EFIFlags *EFShiftSort Column|Command|Impose|Spooler*%EFIGroup *EFShiftSort FPFinishing/Finishing*%EFIRange *EFShiftSort/Number of Copies for Offset:(1;9999;1;1): " /XJXsetShiftSort where { pop <*EFShiftSort> XJXsetShiftSort } if "*%EFIKeyAttribute [EFShiftSort][polymorphic:yes]*OpenGroup: FPFinishing1/Finishing 1*%EFIFlags *EFPunchEdge Column|Command|Impose|Spooler*%EFIGroup *EFPunchEdge FPFinishing/Finishing*OpenUI *EFPunchEdge/Hole Punch:PickOne*OrderDependency: 50.0 AnySetup *EFPunchEdge*DefaultEFPunchEdge: None*EFPunchEdge None/None: " /XJXsetpunchEdge where { pop 0 XJXsetpunchEdge } if "*EFPunchEdge Left/Left: " /XJXsetpunchEdge where { pop 1 XJXsetpunchEdge } if "*EFPunchEdge Right/Right: " /XJXsetpunchEdge where { pop 2 XJXsetpunchEdge } if "*EFPunchEdge Top/Top: " /XJXsetpunchEdge where { pop 3 XJXsetpunchEdge } if "*CloseUI: *EFPunchEdge*CloseGroup: FPFinishing1*OpenGroup: FPFinishing1/Finishing 1*%EFIFlags *EFSort Column|Command|Impose|Spooler*%EFIGroup *EFSort FPFinishing/Finishing*OpenUI *EFSort/Sorter Mode:PickOne*OrderDependency: 40.0 AnySetup *EFSort*DefaultEFSort: Collate*EFSort Collate/Collate without shift: " /XJXsetcollate where { pop true XJXsetcollate } if/XJXsetsorter where { pop 3 XJXsetsorter } if "*End*EFSort Group/Group without shift: " /XJXsetcollate where { pop false XJXsetcollate } if/XJXsetsorter where { pop 2 XJXsetsorter } if "*End*EFSort CollateWithShift/Collate: " /XJXsetcollate where { pop true XJXsetcollate } if/XJXsetsorter where { pop 7 XJXsetsorter } if "*End*EFSort GroupWithShift/Group: " /XJXsetcollate where { pop false XJXsetcollate } if/XJXsetsorter where { pop 8 XJXsetsorter } if "*End*EFSort CrossCollate/Cross-Collate: " /XJXsetcollate where { pop true XJXsetcollate } if/XJXsetsorter where { pop 5 XJXsetsorter } if "*End*EFSort CrossGroup/Cross-Group: " /XJXsetcollate where { pop false XJXsetcollate } if/XJXsetsorter where { pop 4 XJXsetsorter } if "*End*CloseUI: *EFSort*CloseGroup: FPFinishing1*OpenGroup: FPFinishing1/Finishing 1*%EFIFlags *EFOutputBin Command|Impose|Spooler*%EFIGroup *EFOutputBin FPFinishing/Finishing*OpenUI *EFOutputBin/Paper Output:PickOne*OrderDependency: 50.0 AnySetup *EFOutputBin*DefaultEFOutputBin: AutoSelect*EFOutputBin AutoSelect/Auto: "/XJXsetOutputBinV2 where { pop 99 XJXsetOutputBinV2 } if "*End*EFOutputBin Outbin5/Tray A (Internal): "/XJXsetOutputBinV2 where { pop 8 XJXsetOutputBinV2 } if "*End*EFOutputBin Outbin6/Tray A (Left): "/XJXsetOutputBinV2 where { pop 9 XJXsetOutputBinV2 } if "*End*EFOutputBin Outbin7/Tray A (Middle): "/XJXsetOutputBinV2 where { pop 10 XJXsetOutputBinV2 } if "*End*EFOutputBin Outbin8/Tray B (Internal): "/XJXsetOutputBinV2 where { pop 11 XJXsetOutputBinV2 } if "*End*EFOutputBin Outbin10/Tray B (Lower): "/XJXsetOutputBinV2 where { pop 13 XJXsetOutputBinV2 } if "*End*EFOutputBin Outbin11/Tray C (Upper): "/XJXsetOutputBinV2 where { pop 14 XJXsetOutputBinV2 } if "*End*EFOutputBin Outbin12/Tray C (Upper/Internal): "/XJXsetOutputBinV2 where { pop 15 XJXsetOutputBinV2 } if "*End*CloseUI: *EFOutputBin*CloseGroup: FPFinishing1*OpenGroup: FPFinishing1/Finishing 1*%EFIFlags *EFStapler Column|Command|Impose|Spooler*%EFIGroup *EFStapler FPFinishing/Finishing*OpenUI *EFStapler/Stapler Mode:PickOne*OrderDependency: 50.0 AnySetup *EFStapler*DefaultEFStapler: False*EFStapler False/Off: " /XJXsetstapleV2 where {pop 0 XJXsetstapleV2} if "*EFStapler 1UpLeftS/Corner (Upper Left): " /XJXsetstapleV2 where {pop 1 XJXsetstapleV2} if "*EFStapler 1UpRightS/Corner (Upper Right): " /XJXsetstapleV2 where {pop 2 XJXsetstapleV2} if "*EFStapler 2Left/Double (Left): " /XJXsetstapleV2 where {pop 3 XJXsetstapleV2} if "*EFStapler 2Right/Double (Right): " /XJXsetstapleV2 where {pop 4 XJXsetstapleV2} if "*EFStapler 2Up/Double (Top): " /XJXsetstapleV2 where {pop 5 XJXsetstapleV2} if "*EFStapler Stitch/Saddle Stitch: " /XJXsetstapleV2 where {pop 14 XJXsetstapleV2} if "*CloseUI: *EFStapler*CloseGroup: FPFinishing1*%EFIFlags *EFImageBackX Column|CommandEx|Impose|MacIS|NoUIPageOverride|Rerip|Spooler*%EFIGroup *EFImageBackX FPFinishing/Finishing*%EFIRange *EFImageBackX/Back X:(-99999;99999;1;0): " userdict /XJXEFIsetpageproperties known { << /XJXSetImageBackX [<*EFImageBackX> ] >> XJXEFIsetpageproperties } if "*%EFIKeyAttribute [EFImageBackX][polymorphic:yes]*%EFIFlags *EFImageBackY Column|CommandEx|Impose|MacIS|NoUIPageOverride|Rerip|Spooler*%EFIGroup *EFImageBackY FPFinishing/Finishing*%EFIRange *EFImageBackY/Back Y:(-99999;99999;1;0): " userdict /XJXEFIsetpageproperties known { << /XJXSetImageBackY [<*EFImageBackY> ] >> XJXEFIsetpageproperties } if "*%EFIKeyAttribute [EFImageBackY][polymorphic:yes]*%EFIFlags *EFImageFrontX Column|CommandEx|Impose|MacIS|NoUIPageOverride|Rerip|Spooler*%EFIGroup *EFImageFrontX FPFinishing/Finishing*%EFIRange *EFImageFrontX/Front X:(-99999;99999;1;0): " userdict /XJXEFIsetpageproperties known { << /XJXSetImageFrontX [<*EFImageFrontX> ] >> XJXEFIsetpageproperties } if "*%EFIKeyAttribute [EFImageFrontX][polymorphic:yes]*%EFIFlags *EFImageFrontY Column|CommandEx|Impose|MacIS|NoUIPageOverride|Rerip|Spooler*%EFIGroup *EFImageFrontY FPFinishing/Finishing*%EFIRange *EFImageFrontY/Front Y:(-99999;99999;1;0): " userdict /XJXEFIsetpageproperties known { << /XJXSetImageFrontY [<*EFImageFrontY> ] >> XJXEFIsetpageproperties } if "*%EFIKeyAttribute [EFImageFrontY][polymorphic:yes]*OpenGroup: FPFinishing2/Finishing 2*%EFIFlags *EFImageAlign Column|CommandEx|Impose|Rerip|Spooler*%EFIGroup *EFImageAlign FPFinishing/Finishing*OpenUI *EFImageAlign/Align front and back images:Boolean*OrderDependency: 40.0 AnySetup *EFImageAlign*DefaultEFImageAlign: False*EFImageAlign False/Off: " userdict /XJXImageShiftAlign known { false XJXImageShiftAlign } if "*EFImageAlign True/On: " userdict /XJXImageShiftAlign known { true XJXImageShiftAlign } if "*CloseUI: *EFImageAlign*CloseGroup: FPFinishing2*OpenGroup: FPFinishing2/Finishing 2*%EFIFlags *EFImageUnit Column|CommandEx|Impose|Rerip|Spooler*%EFIGroup *EFImageUnit FPFinishing/Finishing*OpenUI *EFImageUnit/Units:PickOne*OrderDependency: 54.0 AnySetup *EFImageUnit*DefaultEFImageUnit: Inches*EFImageUnit MM/mm: ""*EFImageUnit Inches/inches: ""*EFImageUnit Points/points: ""*CloseUI: *EFImageUnit*CloseGroup: FPFinishing2*OpenGroup: FPFinishing2/Finishing 2*%EFIFlags *EFImageFlag Column|CommandEx|Impose|Rerip|Spooler*%EFIGroup *EFImageFlag FPFinishing/Finishing*OpenUI *EFImageFlag/Image Shift:Boolean*OrderDependency: 40.0 AnySetup *EFImageFlag*DefaultEFImageFlag: False*EFImageFlag False/Off: " userdict /XJXEFIsetpageproperties known{ << /XJXImageShiftFlag [ false ] >> XJXEFIsetpageproperties }{ userdict /XJXImageShiftFlag known { false XJXImageShiftFlag } if } ifelse "*End*EFImageFlag True/On: " userdict /XJXEFIsetpageproperties known{ << /XJXImageShiftFlag [ true ] >> XJXEFIsetpageproperties }{ userdict /XJXImageShiftFlag known { true XJXImageShiftFlag } if } ifelse "*End*CloseUI: *EFImageFlag*CloseGroup: FPFinishing2*OpenGroup: FPVDP1/VDP*%EFIFlags *EFCreateMaster Column|Command|Impose*%EFIGroup *EFCreateMaster FPVDP/VDP*OpenUI *EFCreateMaster/Create Master:PickOne*OrderDependency: 57.0 AnySetup *EFCreateMaster*DefaultEFCreateMaster: None*EFCreateMaster None/None: " /XJXCreateMaster where { pop 0 XJXCreateMaster } if "*EFCreateMaster formC1/1: " /XJXCreateMaster where { pop 1 XJXCreateMaster } if "*EFCreateMaster formC2/2: " /XJXCreateMaster where { pop 2 XJXCreateMaster } if "*EFCreateMaster formC3/3: " /XJXCreateMaster where { pop 3 XJXCreateMaster } if "*EFCreateMaster formC4/4: " /XJXCreateMaster where { pop 4 XJXCreateMaster } if "*EFCreateMaster formC5/5: " /XJXCreateMaster where { pop 5 XJXCreateMaster } if "*EFCreateMaster formC6/6: " /XJXCreateMaster where { pop 6 XJXCreateMaster } if "*EFCreateMaster formC7/7: " /XJXCreateMaster where { pop 7 XJXCreateMaster } if "*EFCreateMaster formC8/8: " /XJXCreateMaster where { pop 8 XJXCreateMaster } if "*EFCreateMaster formC9/9: " /XJXCreateMaster where { pop 9 XJXCreateMaster } if "*EFCreateMaster formC10/10: " /XJXCreateMaster where { pop 10 XJXCreateMaster } if "*EFCreateMaster formC11/11: " /XJXCreateMaster where { pop 11 XJXCreateMaster } if "*EFCreateMaster formC12/12: " /XJXCreateMaster where { pop 12 XJXCreateMaster } if "*EFCreateMaster formC13/13: " /XJXCreateMaster where { pop 13 XJXCreateMaster } if "*EFCreateMaster formC14/14: " /XJXCreateMaster where { pop 14 XJXCreateMaster } if "*EFCreateMaster formC15/15: " /XJXCreateMaster where { pop 15 XJXCreateMaster } if "*EFCreateMaster formC16/16: " /XJXCreateMaster where { pop 16 XJXCreateMaster } if "*EFCreateMaster formC17/17: " /XJXCreateMaster where { pop 17 XJXCreateMaster } if "*EFCreateMaster formC18/18: " /XJXCreateMaster where { pop 18 XJXCreateMaster } if "*EFCreateMaster formC19/19: " /XJXCreateMaster where { pop 19 XJXCreateMaster } if "*EFCreateMaster formC20/20: " /XJXCreateMaster where { pop 20 XJXCreateMaster } if "*EFCreateMaster formC21/21: " /XJXCreateMaster where { pop 21 XJXCreateMaster } if "*EFCreateMaster formC22/22: " /XJXCreateMaster where { pop 22 XJXCreateMaster } if "*EFCreateMaster formC23/23: " /XJXCreateMaster where { pop 23 XJXCreateMaster } if "*EFCreateMaster formC24/24: " /XJXCreateMaster where { pop 24 XJXCreateMaster } if "*EFCreateMaster formC25/25: " /XJXCreateMaster where { pop 25 XJXCreateMaster } if "*EFCreateMaster formC26/26: " /XJXCreateMaster where { pop 26 XJXCreateMaster } if "*EFCreateMaster formC27/27: " /XJXCreateMaster where { pop 27 XJXCreateMaster } if "*EFCreateMaster formC28/28: " /XJXCreateMaster where { pop 28 XJXCreateMaster } if "*EFCreateMaster formC29/29: " /XJXCreateMaster where { pop 29 XJXCreateMaster } if "*EFCreateMaster formC30/30: " /XJXCreateMaster where { pop 30 XJXCreateMaster } if "*EFCreateMaster formC31/31: " /XJXCreateMaster where { pop 31 XJXCreateMaster } if "*EFCreateMaster formC32/32: " /XJXCreateMaster where { pop 32 XJXCreateMaster } if "*EFCreateMaster formC33/33: " /XJXCreateMaster where { pop 33 XJXCreateMaster } if "*EFCreateMaster formC34/34: " /XJXCreateMaster where { pop 34 XJXCreateMaster } if "*EFCreateMaster formC35/35: " /XJXCreateMaster where { pop 35 XJXCreateMaster } if "*EFCreateMaster formC36/36: " /XJXCreateMaster where { pop 36 XJXCreateMaster } if "*EFCreateMaster formC37/37: " /XJXCreateMaster where { pop 37 XJXCreateMaster } if "*EFCreateMaster formC38/38: " /XJXCreateMaster where { pop 38 XJXCreateMaster } if "*EFCreateMaster formC39/39: " /XJXCreateMaster where { pop 39 XJXCreateMaster } if "*EFCreateMaster formC40/40: " /XJXCreateMaster where { pop 40 XJXCreateMaster } if "*EFCreateMaster formC41/41: " /XJXCreateMaster where { pop 41 XJXCreateMaster } if "*EFCreateMaster formC42/42: " /XJXCreateMaster where { pop 42 XJXCreateMaster } if "*EFCreateMaster formC43/43: " /XJXCreateMaster where { pop 43 XJXCreateMaster } if "*EFCreateMaster formC44/44: " /XJXCreateMaster where { pop 44 XJXCreateMaster } if "*EFCreateMaster formC45/45: " /XJXCreateMaster where { pop 45 XJXCreateMaster } if "*EFCreateMaster formC46/46: " /XJXCreateMaster where { pop 46 XJXCreateMaster } if "*EFCreateMaster formC47/47: " /XJXCreateMaster where { pop 47 XJXCreateMaster } if "*EFCreateMaster formC48/48: " /XJXCreateMaster where { pop 48 XJXCreateMaster } if "*EFCreateMaster formC49/49: " /XJXCreateMaster where { pop 49 XJXCreateMaster } if "*EFCreateMaster formC50/50: " /XJXCreateMaster where { pop 50 XJXCreateMaster } if "*EFCreateMaster formC51/51: " /XJXCreateMaster where { pop 51 XJXCreateMaster } if "*EFCreateMaster formC52/52: " /XJXCreateMaster where { pop 52 XJXCreateMaster } if "*EFCreateMaster formC53/53: " /XJXCreateMaster where { pop 53 XJXCreateMaster } if "*EFCreateMaster formC54/54: " /XJXCreateMaster where { pop 54 XJXCreateMaster } if "*EFCreateMaster formC55/55: " /XJXCreateMaster where { pop 55 XJXCreateMaster } if "*EFCreateMaster formC56/56: " /XJXCreateMaster where { pop 56 XJXCreateMaster } if "*EFCreateMaster formC57/57: " /XJXCreateMaster where { pop 57 XJXCreateMaster } if "*EFCreateMaster formC58/58: " /XJXCreateMaster where { pop 58 XJXCreateMaster } if "*EFCreateMaster formC59/59: " /XJXCreateMaster where { pop 59 XJXCreateMaster } if "*EFCreateMaster formC60/60: " /XJXCreateMaster where { pop 60 XJXCreateMaster } if "*EFCreateMaster formC61/61: " /XJXCreateMaster where { pop 61 XJXCreateMaster } if "*EFCreateMaster formC62/62: " /XJXCreateMaster where { pop 62 XJXCreateMaster } if "*EFCreateMaster formC63/63: " /XJXCreateMaster where { pop 63 XJXCreateMaster } if "*EFCreateMaster formC64/64: " /XJXCreateMaster where { pop 64 XJXCreateMaster } if "*EFCreateMaster formC65/65: " /XJXCreateMaster where { pop 65 XJXCreateMaster } if "*EFCreateMaster formC66/66: " /XJXCreateMaster where { pop 66 XJXCreateMaster } if "*EFCreateMaster formC67/67: " /XJXCreateMaster where { pop 67 XJXCreateMaster } if "*EFCreateMaster formC68/68: " /XJXCreateMaster where { pop 68 XJXCreateMaster } if "*EFCreateMaster formC69/69: " /XJXCreateMaster where { pop 69 XJXCreateMaster } if "*EFCreateMaster formC70/70: " /XJXCreateMaster where { pop 70 XJXCreateMaster } if "*EFCreateMaster formC71/71: " /XJXCreateMaster where { pop 71 XJXCreateMaster } if "*EFCreateMaster formC72/72: " /XJXCreateMaster where { pop 72 XJXCreateMaster } if "*EFCreateMaster formC73/73: " /XJXCreateMaster where { pop 73 XJXCreateMaster } if "*EFCreateMaster formC74/74: " /XJXCreateMaster where { pop 74 XJXCreateMaster } if "*EFCreateMaster formC75/75: " /XJXCreateMaster where { pop 75 XJXCreateMaster } if "*EFCreateMaster formC76/76: " /XJXCreateMaster where { pop 76 XJXCreateMaster } if "*EFCreateMaster formC77/77: " /XJXCreateMaster where { pop 77 XJXCreateMaster } if "*EFCreateMaster formC78/78: " /XJXCreateMaster where { pop 78 XJXCreateMaster } if "*EFCreateMaster formC79/79: " /XJXCreateMaster where { pop 79 XJXCreateMaster } if "*EFCreateMaster formC80/80: " /XJXCreateMaster where { pop 80 XJXCreateMaster } if "*EFCreateMaster formC81/81: " /XJXCreateMaster where { pop 81 XJXCreateMaster } if "*EFCreateMaster formC82/82: " /XJXCreateMaster where { pop 82 XJXCreateMaster } if "*EFCreateMaster formC83/83: " /XJXCreateMaster where { pop 83 XJXCreateMaster } if "*EFCreateMaster formC84/84: " /XJXCreateMaster where { pop 84 XJXCreateMaster } if "*EFCreateMaster formC85/85: " /XJXCreateMaster where { pop 85 XJXCreateMaster } if "*EFCreateMaster formC86/86: " /XJXCreateMaster where { pop 86 XJXCreateMaster } if "*EFCreateMaster formC87/87: " /XJXCreateMaster where { pop 87 XJXCreateMaster } if "*EFCreateMaster formC88/88: " /XJXCreateMaster where { pop 88 XJXCreateMaster } if "*EFCreateMaster formC89/89: " /XJXCreateMaster where { pop 89 XJXCreateMaster } if "*EFCreateMaster formC90/90: " /XJXCreateMaster where { pop 90 XJXCreateMaster } if "*EFCreateMaster formC91/91: " /XJXCreateMaster where { pop 91 XJXCreateMaster } if "*EFCreateMaster formC92/92: " /XJXCreateMaster where { pop 92 XJXCreateMaster } if "*EFCreateMaster formC93/93: " /XJXCreateMaster where { pop 93 XJXCreateMaster } if "*EFCreateMaster formC94/94: " /XJXCreateMaster where { pop 94 XJXCreateMaster } if "*EFCreateMaster formC95/95: " /XJXCreateMaster where { pop 95 XJXCreateMaster } if "*EFCreateMaster formC96/96: " /XJXCreateMaster where { pop 96 XJXCreateMaster } if "*EFCreateMaster formC97/97: " /XJXCreateMaster where { pop 97 XJXCreateMaster } if "*EFCreateMaster formC98/98: " /XJXCreateMaster where { pop 98 XJXCreateMaster } if "*EFCreateMaster formC99/99: " /XJXCreateMaster where { pop 99 XJXCreateMaster } if "*EFCreateMaster formC100/100: " /XJXCreateMaster where { pop 100 XJXCreateMaster } if "*CloseUI: *EFCreateMaster*CloseGroup: FPVDP1*OpenGroup: FPVDP1/VDP*%EFIFlags *EFUseMaster Column|Command|Impose|Rerip*%EFIGroup *EFUseMaster FPVDP/VDP*OpenUI *EFUseMaster/Use Master:PickOne*OrderDependency: 57.0 AnySetup *EFUseMaster*DefaultEFUseMaster: None*EFUseMaster None/None: " /XJXUseMaster where { pop 0 XJXUseMaster } if "*EFUseMaster formU1/1: " /XJXUseMaster where { pop 1 XJXUseMaster } if "*EFUseMaster formU2/2: " /XJXUseMaster where { pop 2 XJXUseMaster } if "*EFUseMaster formU3/3: " /XJXUseMaster where { pop 3 XJXUseMaster } if "*EFUseMaster formU4/4: " /XJXUseMaster where { pop 4 XJXUseMaster } if "*EFUseMaster formU5/5: " /XJXUseMaster where { pop 5 XJXUseMaster } if "*EFUseMaster formU6/6: " /XJXUseMaster where { pop 6 XJXUseMaster } if "*EFUseMaster formU7/7: " /XJXUseMaster where { pop 7 XJXUseMaster } if "*EFUseMaster formU8/8: " /XJXUseMaster where { pop 8 XJXUseMaster } if "*EFUseMaster formU9/9: " /XJXUseMaster where { pop 9 XJXUseMaster } if "*EFUseMaster formU10/10: " /XJXUseMaster where { pop 10 XJXUseMaster } if "*EFUseMaster formU11/11: " /XJXUseMaster where { pop 11 XJXUseMaster } if "*EFUseMaster formU12/12: " /XJXUseMaster where { pop 12 XJXUseMaster } if "*EFUseMaster formU13/13: " /XJXUseMaster where { pop 13 XJXUseMaster } if "*EFUseMaster formU14/14: " /XJXUseMaster where { pop 14 XJXUseMaster } if "*EFUseMaster formU15/15: " /XJXUseMaster where { pop 15 XJXUseMaster } if "*EFUseMaster formU16/16: " /XJXUseMaster where { pop 16 XJXUseMaster } if "*EFUseMaster formU17/17: " /XJXUseMaster where { pop 17 XJXUseMaster } if "*EFUseMaster formU18/18: " /XJXUseMaster where { pop 18 XJXUseMaster } if "*EFUseMaster formU19/19: " /XJXUseMaster where { pop 19 XJXUseMaster } if "*EFUseMaster formU20/20: " /XJXUseMaster where { pop 20 XJXUseMaster } if "*EFUseMaster formU21/21: " /XJXUseMaster where { pop 21 XJXUseMaster } if "*EFUseMaster formU22/22: " /XJXUseMaster where { pop 22 XJXUseMaster } if "*EFUseMaster formU23/23: " /XJXUseMaster where { pop 23 XJXUseMaster } if "*EFUseMaster formU24/24: " /XJXUseMaster where { pop 24 XJXUseMaster } if "*EFUseMaster formU25/25: " /XJXUseMaster where { pop 25 XJXUseMaster } if "*EFUseMaster formU26/26: " /XJXUseMaster where { pop 26 XJXUseMaster } if "*EFUseMaster formU27/27: " /XJXUseMaster where { pop 27 XJXUseMaster } if "*EFUseMaster formU28/28: " /XJXUseMaster where { pop 28 XJXUseMaster } if "*EFUseMaster formU29/29: " /XJXUseMaster where { pop 29 XJXUseMaster } if "*EFUseMaster formU30/30: " /XJXUseMaster where { pop 30 XJXUseMaster } if "*EFUseMaster formU31/31: " /XJXUseMaster where { pop 31 XJXUseMaster } if "*EFUseMaster formU32/32: " /XJXUseMaster where { pop 32 XJXUseMaster } if "*EFUseMaster formU33/33: " /XJXUseMaster where { pop 33 XJXUseMaster } if "*EFUseMaster formU34/34: " /XJXUseMaster where { pop 34 XJXUseMaster } if "*EFUseMaster formU35/35: " /XJXUseMaster where { pop 35 XJXUseMaster } if "*EFUseMaster formU36/36: " /XJXUseMaster where { pop 36 XJXUseMaster } if "*EFUseMaster formU37/37: " /XJXUseMaster where { pop 37 XJXUseMaster } if "*EFUseMaster formU38/38: " /XJXUseMaster where { pop 38 XJXUseMaster } if "*EFUseMaster formU39/39: " /XJXUseMaster where { pop 39 XJXUseMaster } if "*EFUseMaster formU40/40: " /XJXUseMaster where { pop 40 XJXUseMaster } if "*EFUseMaster formU41/41: " /XJXUseMaster where { pop 41 XJXUseMaster } if "*EFUseMaster formU42/42: " /XJXUseMaster where { pop 42 XJXUseMaster } if "*EFUseMaster formU43/43: " /XJXUseMaster where { pop 43 XJXUseMaster } if "*EFUseMaster formU44/44: " /XJXUseMaster where { pop 44 XJXUseMaster } if "*EFUseMaster formU45/45: " /XJXUseMaster where { pop 45 XJXUseMaster } if "*EFUseMaster formU46/46: " /XJXUseMaster where { pop 46 XJXUseMaster } if "*EFUseMaster formU47/47: " /XJXUseMaster where { pop 47 XJXUseMaster } if "*EFUseMaster formU48/48: " /XJXUseMaster where { pop 48 XJXUseMaster } if "*EFUseMaster formU49/49: " /XJXUseMaster where { pop 49 XJXUseMaster } if "*EFUseMaster formU50/50: " /XJXUseMaster where { pop 50 XJXUseMaster } if "*EFUseMaster formU51/51: " /XJXUseMaster where { pop 51 XJXUseMaster } if "*EFUseMaster formU52/52: " /XJXUseMaster where { pop 52 XJXUseMaster } if "*EFUseMaster formU53/53: " /XJXUseMaster where { pop 53 XJXUseMaster } if "*EFUseMaster formU54/54: " /XJXUseMaster where { pop 54 XJXUseMaster } if "*EFUseMaster formU55/55: " /XJXUseMaster where { pop 55 XJXUseMaster } if "*EFUseMaster formU56/56: " /XJXUseMaster where { pop 56 XJXUseMaster } if "*EFUseMaster formU57/57: " /XJXUseMaster where { pop 57 XJXUseMaster } if "*EFUseMaster formU58/58: " /XJXUseMaster where { pop 58 XJXUseMaster } if "*EFUseMaster formU59/59: " /XJXUseMaster where { pop 59 XJXUseMaster } if "*EFUseMaster formU60/60: " /XJXUseMaster where { pop 60 XJXUseMaster } if "*EFUseMaster formU61/61: " /XJXUseMaster where { pop 61 XJXUseMaster } if "*EFUseMaster formU62/62: " /XJXUseMaster where { pop 62 XJXUseMaster } if "*EFUseMaster formU63/63: " /XJXUseMaster where { pop 63 XJXUseMaster } if "*EFUseMaster formU64/64: " /XJXUseMaster where { pop 64 XJXUseMaster } if "*EFUseMaster formU65/65: " /XJXUseMaster where { pop 65 XJXUseMaster } if "*EFUseMaster formU66/66: " /XJXUseMaster where { pop 66 XJXUseMaster } if "*EFUseMaster formU67/67: " /XJXUseMaster where { pop 67 XJXUseMaster } if "*EFUseMaster formU68/68: " /XJXUseMaster where { pop 68 XJXUseMaster } if "*EFUseMaster formU69/69: " /XJXUseMaster where { pop 69 XJXUseMaster } if "*EFUseMaster formU70/70: " /XJXUseMaster where { pop 70 XJXUseMaster } if "*EFUseMaster formU71/71: " /XJXUseMaster where { pop 71 XJXUseMaster } if "*EFUseMaster formU72/72: " /XJXUseMaster where { pop 72 XJXUseMaster } if "*EFUseMaster formU73/73: " /XJXUseMaster where { pop 73 XJXUseMaster } if "*EFUseMaster formU74/74: " /XJXUseMaster where { pop 74 XJXUseMaster } if "*EFUseMaster formU75/75: " /XJXUseMaster where { pop 75 XJXUseMaster } if "*EFUseMaster formU76/76: " /XJXUseMaster where { pop 76 XJXUseMaster } if "*EFUseMaster formU77/77: " /XJXUseMaster where { pop 77 XJXUseMaster } if "*EFUseMaster formU78/78: " /XJXUseMaster where { pop 78 XJXUseMaster } if "*EFUseMaster formU79/79: " /XJXUseMaster where { pop 79 XJXUseMaster } if "*EFUseMaster formU80/80: " /XJXUseMaster where { pop 80 XJXUseMaster } if "*EFUseMaster formU81/81: " /XJXUseMaster where { pop 81 XJXUseMaster } if "*EFUseMaster formU82/82: " /XJXUseMaster where { pop 82 XJXUseMaster } if "*EFUseMaster formU83/83: " /XJXUseMaster where { pop 83 XJXUseMaster } if "*EFUseMaster formU84/84: " /XJXUseMaster where { pop 84 XJXUseMaster } if "*EFUseMaster formU85/85: " /XJXUseMaster where { pop 85 XJXUseMaster } if "*EFUseMaster formU86/86: " /XJXUseMaster where { pop 86 XJXUseMaster } if "*EFUseMaster formU87/87: " /XJXUseMaster where { pop 87 XJXUseMaster } if "*EFUseMaster formU88/88: " /XJXUseMaster where { pop 88 XJXUseMaster } if "*EFUseMaster formU89/89: " /XJXUseMaster where { pop 89 XJXUseMaster } if "*EFUseMaster formU90/90: " /XJXUseMaster where { pop 90 XJXUseMaster } if "*EFUseMaster formU91/91: " /XJXUseMaster where { pop 91 XJXUseMaster } if "*EFUseMaster formU92/92: " /XJXUseMaster where { pop 92 XJXUseMaster } if "*EFUseMaster formU93/93: " /XJXUseMaster where { pop 93 XJXUseMaster } if "*EFUseMaster formU94/94: " /XJXUseMaster where { pop 94 XJXUseMaster } if "*EFUseMaster formU95/95: " /XJXUseMaster where { pop 95 XJXUseMaster } if "*EFUseMaster formU96/96: " /XJXUseMaster where { pop 96 XJXUseMaster } if "*EFUseMaster formU97/97: " /XJXUseMaster where { pop 97 XJXUseMaster } if "*EFUseMaster formU98/98: " /XJXUseMaster where { pop 98 XJXUseMaster } if "*EFUseMaster formU99/99: " /XJXUseMaster where { pop 99 XJXUseMaster } if "*EFUseMaster formU100/100: " /XJXUseMaster where { pop 100 XJXUseMaster } if "*CloseUI: *EFUseMaster*CloseGroup: FPVDP1*OpenGroup: FPVDP1/VDP*%EFIFlags *EFPrintMaster CheckBox|Command|Impose|Setup*%EFIGroup *EFPrintMaster FPVDP/VDP*OpenUI *EFPrintMaster/Print Master:PickOne*OrderDependency: 57.0 AnySetup *EFPrintMaster*DefaultEFPrintMaster: EFPrintMasterDEF*EFPrintMaster EFPrintMasterDEF/Printer's default: " "*EFPrintMaster False/No: " /XJXFFMPrint where { pop false XJXFFMPrint } if "*EFPrintMaster True/Yes: " /XJXFFMPrint where { pop true XJXFFMPrint } if "*CloseUI: *EFPrintMaster*CloseGroup: FPVDP1*OpenGroup: FPVDP1/VDP*%EFIFlags *EFPPTSlide Column|Command|Rerip|Spooler*%EFIGroup *EFPPTSlide FPVDP/VDP*OpenUI *EFPPTSlide/Remove White PPT Background:Boolean*OrderDependency: 58.0 AnySetup *EFPPTSlide*DefaultEFPPTSlide: False*EFPPTSlide False/Off: " userdict /XJXKeepPPTBackground known { XJXKeepPPTBackground } if "*EFPPTSlide True/On: " userdict /XJXRemovePPTBackground known { XJXRemovePPTBackground } if "*CloseUI: *EFPPTSlide*CloseGroup: FPVDP1*%EFIFlags *EFCopyNumStart Column|Command*%EFIGroup *EFCopyNumStart FPStamping/Stamping*%EFIRange *EFCopyNumStart/Copy Numbering Start [1 to 9999] :(1;9999;1;1): " /XJXsetSerialNumberStart where { pop <*EFCopyNumStart> XJXsetSerialNumberStart } if "*%EFIKeyAttribute [EFCopyNumStart][polymorphic:yes]*OpenGroup: FPStamping1/Stamping*%EFIFlags *EFTrustMark Command|Spooler*%EFIGroup *EFTrustMark FPStamping/Stamping*OpenUI *EFTrustMark/Use Secure Watermarks of Device:PickOne*OrderDependency: 50.0 AnySetup *EFTrustMark*DefaultEFTrustMark: False*EFTrustMark False/Off: "/XJXSetEFTrustMark where { pop (False) XJXSetEFTrustMark } if"*EFTrustMark Type1/On: "/XJXSetEFTrustMark where { pop (Type1) XJXSetEFTrustMark } if"*CloseUI: *EFTrustMark*CloseGroup: FPStamping1*OpenGroup: FPStamping1/Stamping*%EFIFlags *EFCopyNumMode Column|Command*%EFIGroup *EFCopyNumMode FPStamping/Stamping*OpenUI *EFCopyNumMode/Copy Set Numbering:PickOne*OrderDependency: 65.0 AnySetup *EFCopyNumMode*DefaultEFCopyNumMode: None*EFCopyNumMode None/Off: " /XJXsetSerialNumberMode where { pop 1 XJXsetSerialNumberMode } if "*EFCopyNumMode Auto/On: " /XJXsetSerialNumberMode where { pop 2 XJXsetSerialNumberMode } if "*CloseUI: *EFCopyNumMode*CloseGroup: FPStamping1*% ========== Media Selection ==========*%EFIFlags *PageSize Command|MediaKey|Rerip*%EFIGroup *PageSize FPPaperSource/Media*OpenUI *PageSize/Document Size:PickOne*OrderDependency: 90.0 AnySetup *PageSize*DefaultPageSize: Letter*PageSize A3/A3: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFA3) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFA3) XJXsetpagesize } { << /PageSize [843 1191] >> setpagedevice } ifelse } ifelse "*End*PageSize B4/B4: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFB4) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFB4) XJXsetpagesize } { << /PageSize [727 1031] >> setpagedevice } ifelse } ifelse "*End*PageSize A4/A4: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA4) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFA4) XJXsetpagesize } { << /PageSize [595 842] >> setpagedevice } ifelse } ifelse "*End*PageSize B5/B5: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFB5) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFB5) XJXsetpagesize } { << /PageSize [517 730] >> setpagedevice } ifelse } ifelse "*End*PageSize A5/A5: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA5) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFA5) XJXsetpagesize } { << /PageSize [420 596] >> setpagedevice } ifelse } ifelse "*End*PageSize Tabloid/11x17: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFTabloid) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFTabloid) XJXsetpagesize } { << /PageSize [792 1224] >> setpagedevice } ifelse } ifelse "*End*PageSize Legal/Legal: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFLegal) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFLegal) XJXsetpagesize } { << /PageSize [612 1008] >> setpagedevice } ifelse } ifelse "*End*PageSize Letter/Letter: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFLetter) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFLetter) XJXsetpagesize } { << /PageSize [612 792] >> setpagedevice } ifelse } ifelse "*End*PageSize Statement/Statement: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFStatement) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFStatement) XJXsetpagesize } { << /PageSize [396 612] >> setpagedevice } ifelse } ifelse "*End*PageSize SRA3/SRA3: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFSRA3) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFSRA3) XJXsetpagesize } { << /PageSize [907 1275] >> setpagedevice } ifelse } ifelse "*End*PageSize TabloidExtra/12x18: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFARCHB) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFARCHB) XJXsetpagesize } { << /PageSize [864 1296] >> setpagedevice } ifelse } ifelse "*End*PageSize Executive/Executive: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFExecutive) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFExecutive) XJXsetpagesize } { << /PageSize [522 756] >> setpagedevice } ifelse } ifelse "*End*PageSize A4Tab/Tab Paper (A4): " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA4Tab) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFA4Tab) XJXsetpagesize } { << /PageSize [631 841] >> setpagedevice } ifelse } ifelse "*End*PageSize 9x11/Tab Paper (Letter): " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFNineByEleven) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFNineByEleven) XJXsetpagesize } { << /PageSize [648 793] >> setpagedevice } ifelse } ifelse "*End*PageSize Env10/COM10: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFEnv10) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFEnv10) XJXsetpagesize } { << /PageSize [297 684] >> setpagedevice } ifelse } ifelse "*End*PageSize EnvMonarch/Monarch: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFEnvMonarch) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFEnvMonarch) XJXsetpagesize } { << /PageSize [279 540] >> setpagedevice } ifelse } ifelse "*End*PageSize EnvC5/ISO-C5: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFEnvC5) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFEnvC5) XJXsetpagesize } { << /PageSize [459 649] >> setpagedevice } ifelse } ifelse "*End*PageSize ISOB5/ISO-B5: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFISOB5) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFISOB5) XJXsetpagesize } { << /PageSize [499 710] >> setpagedevice } ifelse } ifelse "*End*?PageSize: " FieryXJdict /PageSizeQuery get exec = flush "*CloseUI: *PageSize*OpenUI *PageRegion:PickOne*OrderDependency: 95.0 AnySetup *PageRegion*DefaultPageRegion: Letter*PageRegion A3/A3: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFA3) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFA3) XJXsetpagesize } { << /PageSize [843 1191] >> setpagedevice } ifelse } ifelse "*End*PageRegion B4/B4: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFB4) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFB4) XJXsetpagesize } { << /PageSize [727 1031] >> setpagedevice } ifelse } ifelse "*End*PageRegion A4/A4: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA4) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFA4) XJXsetpagesize } { << /PageSize [595 842] >> setpagedevice } ifelse } ifelse "*End*PageRegion B5/B5: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFB5) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFB5) XJXsetpagesize } { << /PageSize [517 730] >> setpagedevice } ifelse } ifelse "*End*PageRegion A5/A5: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA5) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFA5) XJXsetpagesize } { << /PageSize [420 596] >> setpagedevice } ifelse } ifelse "*End*PageRegion Tabloid/11x17: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFTabloid) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFTabloid) XJXsetpagesize } { << /PageSize [792 1224] >> setpagedevice } ifelse } ifelse "*End*PageRegion Legal/Legal: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFLegal) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFLegal) XJXsetpagesize } { << /PageSize [612 1008] >> setpagedevice } ifelse } ifelse "*End*PageRegion Letter/Letter: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFLetter) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFLetter) XJXsetpagesize } { << /PageSize [612 792] >> setpagedevice } ifelse } ifelse "*End*PageRegion Statement/Statement: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFStatement) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFStatement) XJXsetpagesize } { << /PageSize [396 612] >> setpagedevice } ifelse } ifelse "*End*PageRegion SRA3/SRA3: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFSRA3) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFSRA3) XJXsetpagesize } { << /PageSize [907 1275] >> setpagedevice } ifelse } ifelse "*End*PageRegion TabloidExtra/12x18: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFARCHB) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFARCHB) XJXsetpagesize } { << /PageSize [864 1296] >> setpagedevice } ifelse } ifelse "*End*PageRegion Executive/Executive: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFExecutive) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFExecutive) XJXsetpagesize } { << /PageSize [522 756] >> setpagedevice } ifelse } ifelse "*End*PageRegion A4Tab/Tab Paper (A4): " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFA4Tab) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFA4Tab) XJXsetpagesize } { << /PageSize [631 841] >> setpagedevice } ifelse } ifelse "*End*PageRegion 9x11/Tab Paper (Letter): " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (LEFNineByEleven) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (LEFNineByEleven) XJXsetpagesize } { << /PageSize [648 793] >> setpagedevice } ifelse } ifelse "*End*PageRegion Env10/COM10: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFEnv10) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFEnv10) XJXsetpagesize } { << /PageSize [297 684] >> setpagedevice } ifelse } ifelse "*End*PageRegion EnvMonarch/Monarch: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFEnvMonarch) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFEnvMonarch) XJXsetpagesize } { << /PageSize [279 540] >> setpagedevice } ifelse } ifelse "*End*PageRegion EnvC5/ISO-C5: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFEnvC5) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFEnvC5) XJXsetpagesize } { << /PageSize [459 649] >> setpagedevice } ifelse } ifelse "*End*PageRegion ISOB5/ISO-B5: " userdict /XJXEFIsetpageproperties known{  << /XJXSetImageable [ () ] /XJXsetpagesizeInternal [ (SEFISOB5) ] >> XJXEFIsetpageproperties }{ /XJXSetImageable where { pop () XJXSetImageable } if  /XJXsetpagesize where { pop (SEFISOB5) XJXsetpagesize } { << /PageSize [499 710] >> setpagedevice } ifelse } ifelse "*End*CloseUI: *PageRegion*DefaultImageableArea: Letter*ImageableArea A3/A3: "7.2 7.2 834.8 1183.8"*ImageableArea B4/B4: "7.2 7.2 721.8 1024.8"*ImageableArea A4/A4: "7.2 7.2 587.8 834.8"*ImageableArea B5/B5: "7.2 7.2 508.8 721.8"*ImageableArea A5/A5: "7.2 7.2 412.8 587.8"*ImageableArea Tabloid/11x17: "7.2 7.2 784.8 1216.8"*ImageableArea Legal/Legal: "7.2 7.2 604.8 1000.8"*ImageableArea Letter/Letter: "7.2 7.2 604.8 784.8"*ImageableArea Statement/Statement: "7.2 7.2 388.8 604.8"*ImageableArea SRA3/SRA3: "21.48 7.2 885.52 1267.8"*ImageableArea TabloidExtra/12x18: "7.2 7.2 856.8 1288.8"*ImageableArea Executive/Executive: "7.2 7.2 514.8 748.8"*ImageableArea A4Tab/Tab Paper (A4): "7.2 7.2 623.8 834.8"*ImageableArea 9x11/Tab Paper (Letter): "7.2 7.2 640.8 784.8"*ImageableArea Env10/COM10: "7.2 7.2 289.8 676.8"*ImageableArea EnvMonarch/Monarch: "7.2 7.2 271.8 532.8"*ImageableArea EnvC5/ISO-C5: "7.2 7.2 451.8 641.8"*ImageableArea ISOB5/ISO-B5: "7.2 7.2 491.8 701.8"*?ImageableArea: "save /cvp { cvi 12 string cvs print ( ) print } bind defnewpath clippath pathbbox4 -2 roll exch 2 {ceiling cvp} repeatexch 2 {floor cvp} repeat flushrestore"*End*DefaultPaperDimension: Letter*PaperDimension A3/A3: "842.0 1191.0"*PaperDimension B4/B4: "729.0 1032.0"*PaperDimension A4/A4: "595.0 842.0"*PaperDimension B5/B5: "516.0 729.0"*PaperDimension A5/A5: "420.0 595.0"*PaperDimension Tabloid/11x17: "792.0 1224.0"*PaperDimension Legal/Legal: "612.0 1008.0"*PaperDimension Letter/Letter: "612.0 792.0"*PaperDimension Statement/Statement: "396.0 612.0"*PaperDimension SRA3/SRA3: "907.0 1275.0"*PaperDimension TabloidExtra/12x18: "864.0 1296.0"*PaperDimension Executive/Executive: "522.0 756.0"*PaperDimension A4Tab/Tab Paper (A4): "631.0 842.0"*PaperDimension 9x11/Tab Paper (Letter): "648.0 792.0"*PaperDimension Env10/COM10: "297.0 684.0"*PaperDimension EnvMonarch/Monarch: "279.0 540.0"*PaperDimension EnvC5/ISO-C5: "459.0 649.0"*PaperDimension ISOB5/ISO-B5: "499.0 709.0"*%DefaultPaperFeedDirection: Letter*%PaperFeedDirection A3/A3: "ShortEdge"*%PaperFeedDirection B4/B4: "ShortEdge"*%PaperFeedDirection A4/A4: "LongEdge"*%PaperFeedDirection B5/B5: "LongEdge"*%PaperFeedDirection A5/A5: "LongEdge"*%PaperFeedDirection Tabloid/11x17: "ShortEdge"*%PaperFeedDirection Legal/Legal: "ShortEdge"*%PaperFeedDirection Letter/Letter: "LongEdge"*%PaperFeedDirection Statement/Statement: "ShortEdge"*%PaperFeedDirection SRA3/SRA3: "ShortEdge"*%PaperFeedDirection TabloidExtra/12x18: "ShortEdge"*%PaperFeedDirection Executive/Executive: "LongEdge"*%PaperFeedDirection A4Tab/Tab Paper (A4): "LongEdge"*%PaperFeedDirection 9x11/Tab Paper (Letter): "LongEdge"*%PaperFeedDirection Env10/COM10: "ShortEdge"*%PaperFeedDirection EnvMonarch/Monarch: "ShortEdge"*%PaperFeedDirection EnvC5/ISO-C5: "ShortEdge"*%PaperFeedDirection ISOB5/ISO-B5: "ShortEdge"*% ========== Halftone Information ==========*ScreenAngle: "0"*ScreenFreq: "66.0"*Transfer Null: "{ }"*Transfer Null.Inverse: "{ 1 exch sub }"*DefaultTransfer: Null*% ========== Custom Pagesize ==========*LeadingEdge Short: " "*LeadingEdge Long: " "*LeadingEdge PreferLong: " "*DefaultLeadingEdge: PreferLong*NonUIOrderDependency: 90.0 AnySetup *CustomPageSize*ParamCustomPageSize Width: 1 points 72.0 878.74*ParamCustomPageSize Height: 2 points 72.0 1785.82 *ParamCustomPageSize WidthOffset: 3 points 0 0 *ParamCustomPageSize HeightOffset: 4 points 0 0 *ParamCustomPageSize Orientation: 5 int 0 3 *CustomPageSize True: "   /XJXsetpagesize where { pop XJXsetpagesize }    { 3 1 roll pop pop dup 0 eq exch 2 eq or { exch } if      2 array astore << /PageSize 3 -1 roll >>   setpagedevice } ifelse "*End*HWMargins: 8.28 8.28 8.28 8.28*MaxMediaWidth: "878.74"*MaxMediaHeight: "1785.82"*CenterRegistered: False*% ========== Custom Printsize ==========*%CPLeadingEdge Short: " "*%CPLeadingEdge Long: " "*%CPLeadingEdge PreferLong: " "*%DefaultCPLeadingEdge: PreferLong*%NonUIOrderDependency: 90.0 AnySetup *%CustomPrintSize*%ParamCustomPrintSize Width: 1 points 283.46 878.74*%ParamCustomPrintSize Height: 2 points 419.52 1785.82 *%ParamCustomPrintSize WidthOffset: 3 points 0 0 *%ParamCustomPrintSize HeightOffset: 4 points 0 0 *%ParamCustomPrintSize Orientation: 5 int 0 3 *%CustomPrintSize True: " "*%CPHWMargins: 8.28 8.28 8.28 8.28*%CPMaxMediaWidth: "878.74"*%CPMaxMediaHeight: "1785.82"*% ========== Custom Coversize ==========*%CCLeadingEdge Short: " "*%CCLeadingEdge Long: " "*%CCLeadingEdge PreferLong: " "*%DefaultCCLeadingEdge: PreferLong*%NonUIOrderDependency: 90.0 AnySetup *%CustomCoverSize*%ParamCustomCoverSize Width: 1 points 283.46 878.74*%ParamCustomCoverSize Height: 2 points 419.52 1785.82 *%ParamCustomCoverSize WidthOffset: 3 points 0 0 *%ParamCustomCoverSize HeightOffset: 4 points 0 0*%ParamCustomCoverSize Orientation: 5 int 0 3*%CustomCoverSize True: " "*%CCHWMargins: 8.28 8.28 8.28 8.28*%CCMaxMediaWidth: "878.74"*%CCMaxMediaHeight: "1785.82"*% ========== Font Information ==========*DefaultFont: Courier*Font AdobeSansMM: Standard "(001.000)" Standard ROM*Font AdobeSerifMM: Standard "(001.001)" Standard ROM*Font AlbertusMT: Standard "(001.000)" Standard Disk*Font AlbertusMT-Italic: Standard "(001.000)" Standard Disk*Font AlbertusMT-Light: Standard "(001.000)" Standard Disk*Font AntiqueOlive-Bold: Standard "(001.001)" Standard Disk*Font AntiqueOlive-Compact: Standard "(001.001)" Standard Disk*Font AntiqueOlive-Italic: Standard "(001.001)" Standard Disk*Font AntiqueOlive-Roman: Standard "(001.001)" Standard Disk*Font Apple-Chancery: Standard "(2.0)" Standard Disk*Font Arial-BoldItalicMT: Standard "(MS core font:v2.00)" Standard Disk*Font Arial-BoldMT: Standard "(MS core font :V2.00)" Standard Disk*Font Arial-ItalicMT: Standard "(MS core font:V2.00)" Standard Disk*Font ArialMT: Standard "(MS core font:V2.00)" Standard Disk*Font AvantGarde-Book: Standard "(002.000)" ExtendedRoman Disk*Font AvantGarde-BookOblique: Standard "(002.000)" ExtendedRoman Disk*Font AvantGarde-Demi: Standard "(002.000)" ExtendedRoman Disk*Font AvantGarde-DemiOblique: Standard "(002.000)" ExtendedRoman Disk*Font Bodoni: Standard "(001.002)" Standard Disk*Font Bodoni-Bold: Standard "(001.002)" Standard Disk*Font Bodoni-BoldItalic: Standard "(001.002)" Standard Disk*Font Bodoni-Italic: Standard "(001.002)" Standard Disk*Font Bodoni-Poster: Standard "(001.002)" Standard Disk*Font Bodoni-PosterCompressed: Standard "(001.001)" Standard Disk*Font Bookman-Demi: Standard "(002.000)" ExtendedRoman Disk*Font Bookman-DemiItalic: Standard "(002.000)" ExtendedRoman Disk*Font Bookman-Light: Standard "(002.000)" ExtendedRoman Disk*Font Bookman-LightItalic: Standard "(002.000)" ExtendedRoman Disk*Font Carta: Special "(001.001)" Special Disk*Font Chicago: Standard "(2.0)" Standard Disk*Font Clarendon: Standard "(001.001)" Standard Disk*Font Clarendon-Bold: Standard "(001.001)" Standard Disk*Font Clarendon-Light: Standard "(001.001)" Standard Disk*Font CooperBlack: Standard "(001.003)" Standard Disk*Font CooperBlack-Italic: Standard "(001.003)" Standard Disk*Font Copperplate-ThirtyThreeBC: Standard "(001.002)" Standard Disk*Font Copperplate-ThirtyTwoBC: Standard "(001.002)" Standard Disk*Font Coronet-Regular: Standard "(001.000)" ExtendedRoman Disk*Font Courier: Standard "(003.000)" ExtendedRoman Disk*Font Courier-Bold: Standard "(003.000)" ExtendedRoman Disk*Font Courier-BoldOblique: Standard "(003.000)" ExtendedRoman Disk*Font Courier-Oblique: Standard "(003.000)" ExtendedRoman Disk*Font Eurostile: Standard "(001.002)" Standard Disk*Font Eurostile-Bold: Standard "(001.001)" Standard Disk*Font Eurostile-BoldExtendedTwo: Standard "(001.002)" Standard Disk*Font Eurostile-ExtendedTwo: Standard "(001.002)" Standard Disk*Font Geneva: Standard "(2.0)" Standard Disk*Font GillSans: Standard "(001.002)" Standard Disk*Font GillSans-Bold: Standard "(001.001)" Standard Disk*Font GillSans-BoldCondensed: Standard "(001.001)" Standard Disk*Font GillSans-BoldItalic: Standard "(001.002)" Standard Disk*Font GillSans-Condensed: Standard "(001.001)" Standard Disk*Font GillSans-ExtraBold: Standard "(001.001)" Standard Disk*Font GillSans-Italic: Standard "(001.002)" Standard Disk*Font GillSans-Light: Standard "(001.001)" Standard Disk*Font GillSans-LightItalic: Standard "(001.002)" Standard Disk*Font Goudy: Standard "(001.003)" Standard Disk*Font Goudy-Bold: Standard "(001.002)" Standard Disk*Font Goudy-BoldItalic: Standard "(001.002)" Standard Disk*Font Goudy-ExtraBold: Standard "(001.001)" Standard Disk*Font Goudy-Italic: Standard "(001.002)" Standard Disk*Font Helvetica: Standard "(002.000)" ExtendedRoman Disk*Font Helvetica-Bold: Standard "(002.000)" ExtendedRoman Disk*Font Helvetica-BoldOblique: Standard "(002.000)" ExtendedRoman Disk*Font Helvetica-Condensed: Standard "(002.000)" ExtendedRoman Disk*Font Helvetica-Condensed-Bold: Standard "(002.000)" ExtendedRoman Disk*Font Helvetica-Condensed-BoldObl: Standard "(002.000)" ExtendedRoman Disk*Font Helvetica-Condensed-Oblique: Standard "(002.000)" ExtendedRoman Disk*Font Helvetica-Narrow: Standard "(002.000)" ExtendedRoman ROM*Font Helvetica-Narrow-Bold: Standard "(002.000)" ExtendedRoman ROM*Font Helvetica-Narrow-BoldOblique: Standard "(002.000)" ExtendedRoman ROM*Font Helvetica-Narrow-Oblique: Standard "(002.000)" ExtendedRoman ROM*Font Helvetica-Oblique: Standard "(002.000)" ExtendedRoman Disk*Font HoeflerText-Black: Standard "(2.0)" Standard Disk*Font HoeflerText-BlackItalic: Standard "(2.0)" Standard Disk*Font HoeflerText-Italic: Standard "(2.0)" Standard Disk*Font HoeflerText-Ornaments: Special "(2.0)" Special Disk*Font HoeflerText-Regular: Standard "(2.0)" Standard Disk*Font JoannaMT: Standard "(001.000)" Standard Disk*Font JoannaMT-Bold: Standard "(001.000)" Standard Disk*Font JoannaMT-BoldItalic: Standard "(001.000)" Standard Disk*Font JoannaMT-Italic: Standard "(001.000)" Standard Disk*Font LetterGothic: Standard "(001.004)" Standard Disk*Font LetterGothic-Bold: Standard "(001.006)" Standard Disk*Font LetterGothic-BoldSlanted: Standard "(001.005)" Standard Disk*Font LetterGothic-Slanted: Standard "(001.004)" Standard Disk*Font LubalinGraph-Book: Standard "(001.002)" Standard Disk*Font LubalinGraph-BookOblique: Standard "(001.002)" Standard Disk*Font LubalinGraph-Demi: Standard "(001.002)" Standard Disk*Font LubalinGraph-DemiOblique: Standard "(001.002)" Standard Disk*Font Marigold: Standard "(001.000)" Standard Disk*Font Monaco: Standard "(2.0)" Standard Disk*Font MonaLisa-Recut: Standard "(001.000)" Standard Disk*Font NewCenturySchlbk-Bold: Standard "(002.000)" ExtendedRoman Disk*Font NewCenturySchlbk-BoldItalic: Standard "(002.000)" ExtendedRoman Disk*Font NewCenturySchlbk-Italic: Standard "(002.000)" ExtendedRoman Disk*Font NewCenturySchlbk-Roman: Standard "(002.000)" ExtendedRoman Disk*Font NewYork: Standard "(2.0)" Standard Disk*Font Optima: Standard "(001.005)" Standard Disk*Font Optima-Bold: Standard "(001.005)" Standard Disk*Font Optima-BoldItalic: Standard "(001.000)" Standard Disk*Font Optima-Italic: Standard "(001.000)" Standard Disk*Font Oxford: Standard "(001.000)" Standard Disk*Font Palatino-Bold: Standard "(002.000)" ExtendedRoman Disk*Font Palatino-BoldItalic: Standard "(002.000)" ExtendedRoman Disk*Font Palatino-Italic: Standard "(002.000)" ExtendedRoman Disk*Font Palatino-Roman: Standard "(002.000)" ExtendedRoman Disk*Font StempelGaramond-Bold: Standard "(001.002)" Standard Disk*Font StempelGaramond-BoldItalic: Standard "(001.002)" Standard Disk*Font StempelGaramond-Italic: Standard "(001.002)" Standard Disk*Font StempelGaramond-Roman: Standard "(001.002)" Standard Disk*Font Symbol: Special "(001.008)" Special Disk*Font Tekton: Standard "(001.001)" Standard Disk*Font Times-Bold: Standard "(002.000)" ExtendedRoman Disk*Font Times-BoldItalic: Standard "(002.000)" ExtendedRoman Disk*Font Times-Italic: Standard "(002.000)" ExtendedRoman Disk*Font Times-Roman: Standard "(002.000)" ExtendedRoman Disk*Font TimesNewRomanPS-BoldItalicMT: Standard "(MS core font:V2.00)" Standard Disk*Font TimesNewRomanPS-BoldMT: Standard "(MS core font:V2.00)" Standard Disk*Font TimesNewRomanPS-ItalicMT: Standard "(MS core font:V2.00)" Standard Disk*Font TimesNewRomanPSMT: Standard "(MS core font:V2.00)" Standard Disk*Font Univers: Standard "(001.003)" Standard Disk*Font Univers-Bold: Standard "(001.003)" Standard Disk*Font Univers-BoldExt: Standard "(001.000)" Standard Disk*Font Univers-BoldExtObl: Standard "(001.000)" Standard Disk*Font Univers-BoldOblique: Standard "(001.003)" Standard Disk*Font Univers-Condensed: Standard "(001.002)" Standard Disk*Font Univers-CondensedBold: Standard "(001.001)" Standard Disk*Font Univers-CondensedBoldOblique: Standard "(001.001)" Standard Disk*Font Univers-CondensedOblique: Standard "(001.002)" Standard Disk*Font Univers-Extended: Standard "(001.000)" Standard Disk*Font Univers-ExtendedObl: Standard "(001.000)" Standard Disk*Font Univers-Light: Standard "(001.003)" Standard Disk*Font Univers-LightOblique: Standard "(001.003)" Standard Disk*Font Univers-Oblique: Standard "(001.003)" Standard Disk*Font Wingdings-Regular: Special "(Version 2.00)" Special Disk*Font ZapfChancery-MediumItalic: Standard "(002.000)" ExtendedRoman Disk*Font ZapfDingbats: Special "(002.000)" Special Disk*?FontQuery: "save{ count 1 gt{ exch dup 212 string cvs (/) print print (:) print/Font resourcestatus {pop pop (Yes)} {(No)} ifelse =} { exit } ifelse} bind loop(*) = flushrestore"*End*?FontList: "save (*) {cvn ==} 128 string /Font resourceforall(*) = flush restore"*End*% ========== Color Seperation ==========*DefaultColorSep: ProcessBlack.85lpi.600dpi/600 dpi*ColorSepScreenAngle ProcessBlack.85lpi.600dpi/600 dpi: "45"*ColorSepScreenAngle CustomColor.85lpi.600dpi/600 dpi: "45"*ColorSepScreenAngle ProcessCyan.85lpi.600dpi/600 dpi: "15"*ColorSepScreenAngle ProcessMagenta.85lpi.600dpi/600 dpi: "75"*ColorSepScreenAngle ProcessYellow.85lpi.600dpi/600 dpi: "0"*ColorSepScreenFreq ProcessBlack.85lpi.600dpi/600 dpi: "85"*ColorSepScreenFreq CustomColor.85lpi.600dpi/600 dpi: "85"*ColorSepScreenFreq ProcessCyan.85lpi.600dpi/600 dpi: "85"*ColorSepScreenFreq ProcessMagenta.85lpi.600dpi/600 dpi: "85"*ColorSepScreenFreq ProcessYellow.85lpi.600dpi/600 dpi: "85"*InkName: P300FieryBlue/Fiery Blue*InkName: P199FieryRed/Fiery Red*InkName: PblackFieryBlack/Fiery Black*CustomCMYK P300FieryBlue: ".9 .9 .0 .0"*CustomCMYK P199FieryRed: ".0 .9 .9 .0"*CustomCMYK PblackFieryBlack: ".2 .1 .1 .9"*DefaultGuaranteedMaxSeparations: 127*% ========== Sub-Group Info ==========*%EFISubGroupName FPDestination/Destination:*%EFISubGroupParent FPDestination/FPJobInfo*%EFISubGroupName FPUserAuthentication/User Authentication:*%EFISubGroupParent FPUserAuthentication/FPJobInfo*%EFISubGroupName FPJobNotes/Job Notes:*%EFISubGroupParent FPJobNotes/FPJobInfo*%EFISubGroupName FPReporting/Reporting:*%EFISubGroupParent FPReporting/FPJobInfo*%EFISubGroupName FPSlipSheet/Slip Sheets:*%EFISubGroupParent FPSlipSheet/FPPaperSource*%EFISubGroupName FPMixedMedia/Mixed Media:*%EFISubGroupParent FPMixedMedia/FPPaperSource*%EFISubGroupName FPBookletMaker/Booklet Maker:*%EFISubGroupParent FPBookletMaker/FPLayout*%EFISubGroupName FPNupOption/N-Up Option:*%EFISubGroupParent FPNupOption/FPLayout*%EFISubGroupName FPImageShift/Image Shift:*%EFISubGroupParent FPImageShift/FPFinishing*%EFISubGroup *EFDestination/FPDestination*%EFISubGroup *EFMailboxName/FPDestination*%EFISubGroup *EFMailboxNum/FPDestination*%EFISubGroup *EFMailboxNum/FPDestination*%EFISubGroup *EFUserAuthName/FPUserAuthentication*%EFISubGroup *EFUserAuthPwd/FPUserAuthentication*%EFISubGroup *EFRaster/FPJobNotes*%EFISubGroup *Notes1/FPJobNotes*%EFISubGroup *DeptPassword/FPJobNotes*%EFISubGroup *Instruct/FPJobNotes*%EFISubGroup *EFPersUserID/FPJobNotes*%EFISubGroup *EFSecuredPasswd/FPJobNotes*%EFISubGroup *EFPSError/FPReporting*%EFISubGroup *EFMediaInterlv/FPSlipSheet*%EFISubGroup *EFPrintCover/FPSlipSheet*%EFISubGroup *EFMMInUse/FPMixedMedia*%EFISubGroup *EFMMInsType/FPMixedMedia*%EFISubGroup *EFRIPBooklet/FPBookletMaker*%EFISubGroup *EFBookCoverTray/FPBookletMaker*%EFISubGroup *EFBookFrCover/FPBookletMaker*%EFISubGroup *EFBookBkCover/FPBookletMaker*%EFISubGroup *EFBookletCreep/FPBookletMaker*%EFISubGroup *EFBookletReduce/FPBookletMaker*%EFISubGroup *EFBookAutoSpine/FPBookletMaker*%EFISubGroup *EFBookCentering/FPBookletMaker*%EFISubGroup *EFBookCoverEnabled/FPBookletMaker*%EFISubGroup *EFBookCoverEnabledMM/FPBookletMaker*%EFISubGroup *EFBookCoverInType/FPBookletMaker*%EFISubGroup *EFBookCoverSize/FPBookletMaker*%EFISubGroup *EFBookMarginFloatPoints/FPBookletMaker*%EFISubGroup *EFBookNumSheetPerSubset/FPBookletMaker*%EFISubGroup *EFBookSpineFloatPoints/FPBookletMaker*%EFISubGroup *EFNUpBoundingBox/FPNupOption*%EFISubGroup *EFNUpOption/FPNupOption*%EFISubGroup *EFImageAlign/FPImageShift*%EFISubGroup *EFImageUnit/FPImageShift*%EFISubGroup *EFImageBackX/FPImageShift*%EFISubGroup *EFImageBackY/FPImageShift*%EFISubGroup *EFImageFrontX/FPImageShift*%EFISubGroup *EFImageFrontY/FPImageShift*%EFISubGroup *EFImageFlag/FPImageShift*% ========== Meta Data ==========*% CapApp Version:       1.0.126.1257M*% CapApp User Id:       56*% CapApp Project Id:    379*% CapApp SubProject Id: 703*% CapApp Export Time:   2007-12-14 01:31:02 GMT*% PPD Last Modified 2008.08.28 Dec 13 17:31:02 -0800 2007*% OS 10.4 PPD DB version 5/10/05 JDF*% *cupsFilter: "application/vnd.cups-postscript 0 /Library/Printers/Canon/PS3/Filters/fierycupsfilter"*APDialogExtension: "/Library/Printers/Canon/PS3/PDEs/EF124235 (FF).plugin"*% End of PPD file
*%APLANNOTATE START
*%XML: <?xml version="1.0" encoding="UTF-8"?>
*%XML: <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
*%XML: <plist version="1.0">
*%XML: <dict>
*%XML: 	<key>OriginalPPD</key>
*%XML: 	<string>/var/folders/m3/g6vm0wms79gdklp1shs57qqw0000gn/T//0032e5064ad02</string>
*%XML: </dict>
*%XML: </plist>
*%APLANNOTATE END
